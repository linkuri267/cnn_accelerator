/*
 * These source files contain a hardware description of a network
 * automatically generated by CONNECT (CONfigurable NEtwork Creation Tool).
 *
 * This product includes a hardware design developed by Carnegie Mellon
 * University.
 *
 * Copyright (c) 2012 by Michael K. Papamichael, Carnegie Mellon University
 *
 * For more information, see the CONNECT project website at:
 *   http://www.ece.cmu.edu/~mpapamic/connect
 *
 * This design is provided for internal, non-commercial research use only, 
 * cannot be used for, or in support of, goods or services, and is not for
 * redistribution, with or without modifications.
 * 
 * You may not use the name "Carnegie Mellon University" or derivations
 * thereof to endorse or promote products derived from this software.
 *
 * THE SOFTWARE IS PROVIDED "AS-IS" WITHOUT ANY WARRANTY OF ANY KIND, EITHER
 * EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO ANY WARRANTY
 * THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS OR BE ERROR-FREE AND ANY
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE,
 * TITLE, OR NON-INFRINGEMENT.  IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY
 * BE LIABLE FOR ANY DAMAGES, INCLUDING BUT NOT LIMITED TO DIRECT, INDIRECT,
 * SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF, RESULTING FROM, OR IN
 * ANY WAY CONNECTED WITH THIS SOFTWARE (WHETHER OR NOT BASED UPON WARRANTY,
 * CONTRACT, TORT OR OTHERWISE).
 *
 */


//
// Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
//
// On Sun Oct 14 04:24:33 EDT 2018
//
// Method conflict info:
// Method: in_ports_0_putRoutedFlit
// Conflict-free: in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: in_ports_0_putRoutedFlit
//
// Method: in_ports_0_getCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
//
// Method: in_ports_1_putRoutedFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: in_ports_1_putRoutedFlit
//
// Method: in_ports_1_getCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
//
// Method: in_ports_2_putRoutedFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: in_ports_2_putRoutedFlit
//
// Method: in_ports_2_getCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
//
// Method: in_ports_3_putRoutedFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: in_ports_3_putRoutedFlit
//
// Method: in_ports_3_getCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
//
// Method: in_ports_4_putRoutedFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: in_ports_4_putRoutedFlit
//
// Method: in_ports_4_getCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
//
// Method: out_ports_0_getFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_0_getFlit
//
// Method: out_ports_0_putCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_0_putCredits
//
// Method: out_ports_1_getFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_1_getFlit
//
// Method: out_ports_1_putCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_1_putCredits
//
// Method: out_ports_2_getFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_2_getFlit
//
// Method: out_ports_2_putCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_2_putCredits
//
// Method: out_ports_3_getFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_3_getFlit
//
// Method: out_ports_3_putCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_4_getFlit,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_3_putCredits
//
// Method: out_ports_4_getFlit
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_putCredits
// Conflicts: out_ports_4_getFlit
//
// Method: out_ports_4_putCredits
// Conflict-free: in_ports_0_putRoutedFlit,
// 	       in_ports_0_getCredits,
// 	       in_ports_1_putRoutedFlit,
// 	       in_ports_1_getCredits,
// 	       in_ports_2_putRoutedFlit,
// 	       in_ports_2_getCredits,
// 	       in_ports_3_putRoutedFlit,
// 	       in_ports_3_getCredits,
// 	       in_ports_4_putRoutedFlit,
// 	       in_ports_4_getCredits,
// 	       out_ports_0_getFlit,
// 	       out_ports_0_putCredits,
// 	       out_ports_1_getFlit,
// 	       out_ports_1_putCredits,
// 	       out_ports_2_getFlit,
// 	       out_ports_2_putCredits,
// 	       out_ports_3_getFlit,
// 	       out_ports_3_putCredits,
// 	       out_ports_4_getFlit
// Conflicts: out_ports_4_putCredits
//
//
// Ports:
// Name                         I/O  size props
// in_ports_0_getCredits          O     2
// in_ports_1_getCredits          O     2
// in_ports_2_getCredits          O     2
// in_ports_3_getCredits          O     2
// in_ports_4_getCredits          O     2
// out_ports_0_getFlit            O    69
// out_ports_1_getFlit            O    69
// out_ports_2_getFlit            O    69
// out_ports_3_getFlit            O    69
// out_ports_4_getFlit            O    69
// CLK                            I     1 clock
// RST_N                          I     1 reset
// in_ports_0_putRoutedFlit_flit_in  I    72
// in_ports_1_putRoutedFlit_flit_in  I    72
// in_ports_2_putRoutedFlit_flit_in  I    72
// in_ports_3_putRoutedFlit_flit_in  I    72
// in_ports_4_putRoutedFlit_flit_in  I    72
// out_ports_0_putCredits_cr_in   I     2
// out_ports_1_putCredits_cr_in   I     2
// out_ports_2_putCredits_cr_in   I     2
// out_ports_3_putCredits_cr_in   I     2
// out_ports_4_putCredits_cr_in   I     2
// EN_in_ports_0_putRoutedFlit    I     1
// EN_in_ports_1_putRoutedFlit    I     1
// EN_in_ports_2_putRoutedFlit    I     1
// EN_in_ports_3_putRoutedFlit    I     1
// EN_in_ports_4_putRoutedFlit    I     1
// EN_out_ports_0_putCredits      I     1
// EN_out_ports_1_putCredits      I     1
// EN_out_ports_2_putCredits      I     1
// EN_out_ports_3_putCredits      I     1
// EN_out_ports_4_putCredits      I     1
// EN_in_ports_0_getCredits       I     1 unused
// EN_in_ports_1_getCredits       I     1 unused
// EN_in_ports_2_getCredits       I     1 unused
// EN_in_ports_3_getCredits       I     1 unused
// EN_in_ports_4_getCredits       I     1 unused
// EN_out_ports_0_getFlit         I     1
// EN_out_ports_1_getFlit         I     1
// EN_out_ports_2_getFlit         I     1
// EN_out_ports_3_getFlit         I     1
// EN_out_ports_4_getFlit         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
`define BSV_ASSIGNMENT_DELAY
`endif

module mkRouterCore(CLK,
		    RST_N,

		    in_ports_0_putRoutedFlit_flit_in,
		    EN_in_ports_0_putRoutedFlit,

		    EN_in_ports_0_getCredits,
		    in_ports_0_getCredits,

		    in_ports_1_putRoutedFlit_flit_in,
		    EN_in_ports_1_putRoutedFlit,

		    EN_in_ports_1_getCredits,
		    in_ports_1_getCredits,

		    in_ports_2_putRoutedFlit_flit_in,
		    EN_in_ports_2_putRoutedFlit,

		    EN_in_ports_2_getCredits,
		    in_ports_2_getCredits,

		    in_ports_3_putRoutedFlit_flit_in,
		    EN_in_ports_3_putRoutedFlit,

		    EN_in_ports_3_getCredits,
		    in_ports_3_getCredits,

		    in_ports_4_putRoutedFlit_flit_in,
		    EN_in_ports_4_putRoutedFlit,

		    EN_in_ports_4_getCredits,
		    in_ports_4_getCredits,

		    EN_out_ports_0_getFlit,
		    out_ports_0_getFlit,

		    out_ports_0_putCredits_cr_in,
		    EN_out_ports_0_putCredits,

		    EN_out_ports_1_getFlit,
		    out_ports_1_getFlit,

		    out_ports_1_putCredits_cr_in,
		    EN_out_ports_1_putCredits,

		    EN_out_ports_2_getFlit,
		    out_ports_2_getFlit,

		    out_ports_2_putCredits_cr_in,
		    EN_out_ports_2_putCredits,

		    EN_out_ports_3_getFlit,
		    out_ports_3_getFlit,

		    out_ports_3_putCredits_cr_in,
		    EN_out_ports_3_putCredits,

		    EN_out_ports_4_getFlit,
		    out_ports_4_getFlit,

		    out_ports_4_putCredits_cr_in,
		    EN_out_ports_4_putCredits);
  input  CLK;
  input  RST_N;

  // action method in_ports_0_putRoutedFlit
  input  [71 : 0] in_ports_0_putRoutedFlit_flit_in;
  input  EN_in_ports_0_putRoutedFlit;

  // actionvalue method in_ports_0_getCredits
  input  EN_in_ports_0_getCredits;
  output [1 : 0] in_ports_0_getCredits;

  // action method in_ports_1_putRoutedFlit
  input  [71 : 0] in_ports_1_putRoutedFlit_flit_in;
  input  EN_in_ports_1_putRoutedFlit;

  // actionvalue method in_ports_1_getCredits
  input  EN_in_ports_1_getCredits;
  output [1 : 0] in_ports_1_getCredits;

  // action method in_ports_2_putRoutedFlit
  input  [71 : 0] in_ports_2_putRoutedFlit_flit_in;
  input  EN_in_ports_2_putRoutedFlit;

  // actionvalue method in_ports_2_getCredits
  input  EN_in_ports_2_getCredits;
  output [1 : 0] in_ports_2_getCredits;

  // action method in_ports_3_putRoutedFlit
  input  [71 : 0] in_ports_3_putRoutedFlit_flit_in;
  input  EN_in_ports_3_putRoutedFlit;

  // actionvalue method in_ports_3_getCredits
  input  EN_in_ports_3_getCredits;
  output [1 : 0] in_ports_3_getCredits;

  // action method in_ports_4_putRoutedFlit
  input  [71 : 0] in_ports_4_putRoutedFlit_flit_in;
  input  EN_in_ports_4_putRoutedFlit;

  // actionvalue method in_ports_4_getCredits
  input  EN_in_ports_4_getCredits;
  output [1 : 0] in_ports_4_getCredits;

  // actionvalue method out_ports_0_getFlit
  input  EN_out_ports_0_getFlit;
  output [68 : 0] out_ports_0_getFlit;

  // action method out_ports_0_putCredits
  input  [1 : 0] out_ports_0_putCredits_cr_in;
  input  EN_out_ports_0_putCredits;

  // actionvalue method out_ports_1_getFlit
  input  EN_out_ports_1_getFlit;
  output [68 : 0] out_ports_1_getFlit;

  // action method out_ports_1_putCredits
  input  [1 : 0] out_ports_1_putCredits_cr_in;
  input  EN_out_ports_1_putCredits;

  // actionvalue method out_ports_2_getFlit
  input  EN_out_ports_2_getFlit;
  output [68 : 0] out_ports_2_getFlit;

  // action method out_ports_2_putCredits
  input  [1 : 0] out_ports_2_putCredits_cr_in;
  input  EN_out_ports_2_putCredits;

  // actionvalue method out_ports_3_getFlit
  input  EN_out_ports_3_getFlit;
  output [68 : 0] out_ports_3_getFlit;

  // action method out_ports_3_putCredits
  input  [1 : 0] out_ports_3_putCredits_cr_in;
  input  EN_out_ports_3_putCredits;

  // actionvalue method out_ports_4_getFlit
  input  EN_out_ports_4_getFlit;
  output [68 : 0] out_ports_4_getFlit;

  // action method out_ports_4_putCredits
  input  [1 : 0] out_ports_4_putCredits_cr_in;
  input  EN_out_ports_4_putCredits;

  // signals for module outputs
  wire [68 : 0] out_ports_0_getFlit,
		out_ports_1_getFlit,
		out_ports_2_getFlit,
		out_ports_3_getFlit,
		out_ports_4_getFlit;
  wire [1 : 0] in_ports_0_getCredits,
	       in_ports_1_getCredits,
	       in_ports_2_getCredits,
	       in_ports_3_getCredits,
	       in_ports_4_getCredits;

  // inlined wires
  wire [68 : 0] hasFlitsToSend_perIn$wget,
		hasFlitsToSend_perIn_1$wget,
		hasFlitsToSend_perIn_2$wget,
		hasFlitsToSend_perIn_3$wget,
		hasFlitsToSend_perIn_4$wget;
  wire credits_clear_0$whas,
       credits_clear_0_1$whas,
       credits_clear_1$whas,
       credits_clear_1_1$whas,
       credits_clear_2$whas,
       credits_clear_2_1$whas,
       credits_clear_3$whas,
       credits_clear_3_1$whas,
       credits_clear_4$whas,
       credits_clear_4_1$whas,
       credits_set_0$whas,
       credits_set_0_1$whas,
       credits_set_1$whas,
       credits_set_1_1$whas,
       credits_set_2$whas,
       credits_set_2_1$whas,
       credits_set_3$whas,
       credits_set_3_1$whas,
       credits_set_4$whas,
       credits_set_4_1$whas;

  // register activeVC_perIn_reg
  reg [1 : 0] activeVC_perIn_reg;
  wire [1 : 0] activeVC_perIn_reg$D_IN;
  wire activeVC_perIn_reg$EN;

  // register activeVC_perIn_reg_1
  reg [1 : 0] activeVC_perIn_reg_1;
  wire [1 : 0] activeVC_perIn_reg_1$D_IN;
  wire activeVC_perIn_reg_1$EN;

  // register activeVC_perIn_reg_2
  reg [1 : 0] activeVC_perIn_reg_2;
  wire [1 : 0] activeVC_perIn_reg_2$D_IN;
  wire activeVC_perIn_reg_2$EN;

  // register activeVC_perIn_reg_3
  reg [1 : 0] activeVC_perIn_reg_3;
  wire [1 : 0] activeVC_perIn_reg_3$D_IN;
  wire activeVC_perIn_reg_3$EN;

  // register activeVC_perIn_reg_4
  reg [1 : 0] activeVC_perIn_reg_4;
  wire [1 : 0] activeVC_perIn_reg_4$D_IN;
  wire activeVC_perIn_reg_4$EN;

  // register credits_0
  reg [3 : 0] credits_0;
  wire [3 : 0] credits_0$D_IN;
  wire credits_0$EN;

  // register credits_0_1
  reg [3 : 0] credits_0_1;
  wire [3 : 0] credits_0_1$D_IN;
  wire credits_0_1$EN;

  // register credits_1
  reg [3 : 0] credits_1;
  wire [3 : 0] credits_1$D_IN;
  wire credits_1$EN;

  // register credits_1_1
  reg [3 : 0] credits_1_1;
  wire [3 : 0] credits_1_1$D_IN;
  wire credits_1_1$EN;

  // register credits_2
  reg [3 : 0] credits_2;
  wire [3 : 0] credits_2$D_IN;
  wire credits_2$EN;

  // register credits_2_1
  reg [3 : 0] credits_2_1;
  wire [3 : 0] credits_2_1$D_IN;
  wire credits_2_1$EN;

  // register credits_3
  reg [3 : 0] credits_3;
  wire [3 : 0] credits_3$D_IN;
  wire credits_3$EN;

  // register credits_3_1
  reg [3 : 0] credits_3_1;
  wire [3 : 0] credits_3_1$D_IN;
  wire credits_3_1$EN;

  // register credits_4
  reg [3 : 0] credits_4;
  wire [3 : 0] credits_4$D_IN;
  wire credits_4$EN;

  // register credits_4_1
  reg [3 : 0] credits_4_1;
  wire [3 : 0] credits_4_1$D_IN;
  wire credits_4_1$EN;

  // register inPortVL_0
  reg [2 : 0] inPortVL_0;
  wire [2 : 0] inPortVL_0$D_IN;
  wire inPortVL_0$EN;

  // register inPortVL_0_1
  reg [2 : 0] inPortVL_0_1;
  wire [2 : 0] inPortVL_0_1$D_IN;
  wire inPortVL_0_1$EN;

  // register inPortVL_1
  reg [2 : 0] inPortVL_1;
  wire [2 : 0] inPortVL_1$D_IN;
  wire inPortVL_1$EN;

  // register inPortVL_1_1
  reg [2 : 0] inPortVL_1_1;
  wire [2 : 0] inPortVL_1_1$D_IN;
  wire inPortVL_1_1$EN;

  // register inPortVL_2
  reg [2 : 0] inPortVL_2;
  wire [2 : 0] inPortVL_2$D_IN;
  wire inPortVL_2$EN;

  // register inPortVL_2_1
  reg [2 : 0] inPortVL_2_1;
  wire [2 : 0] inPortVL_2_1$D_IN;
  wire inPortVL_2_1$EN;

  // register inPortVL_3
  reg [2 : 0] inPortVL_3;
  wire [2 : 0] inPortVL_3$D_IN;
  wire inPortVL_3$EN;

  // register inPortVL_3_1
  reg [2 : 0] inPortVL_3_1;
  wire [2 : 0] inPortVL_3_1$D_IN;
  wire inPortVL_3_1$EN;

  // register inPortVL_4
  reg [2 : 0] inPortVL_4;
  wire [2 : 0] inPortVL_4$D_IN;
  wire inPortVL_4$EN;

  // register inPortVL_4_1
  reg [2 : 0] inPortVL_4_1;
  wire [2 : 0] inPortVL_4_1$D_IN;
  wire inPortVL_4_1$EN;

  // register lockedVL_0
  reg lockedVL_0;
  wire lockedVL_0$D_IN, lockedVL_0$EN;

  // register lockedVL_0_1
  reg lockedVL_0_1;
  wire lockedVL_0_1$D_IN, lockedVL_0_1$EN;

  // register lockedVL_1
  reg lockedVL_1;
  wire lockedVL_1$D_IN, lockedVL_1$EN;

  // register lockedVL_1_1
  reg lockedVL_1_1;
  wire lockedVL_1_1$D_IN, lockedVL_1_1$EN;

  // register lockedVL_2
  reg lockedVL_2;
  wire lockedVL_2$D_IN, lockedVL_2$EN;

  // register lockedVL_2_1
  reg lockedVL_2_1;
  wire lockedVL_2_1$D_IN, lockedVL_2_1$EN;

  // register lockedVL_3
  reg lockedVL_3;
  wire lockedVL_3$D_IN, lockedVL_3$EN;

  // register lockedVL_3_1
  reg lockedVL_3_1;
  wire lockedVL_3_1$D_IN, lockedVL_3_1$EN;

  // register lockedVL_4
  reg lockedVL_4;
  wire lockedVL_4$D_IN, lockedVL_4$EN;

  // register lockedVL_4_1
  reg lockedVL_4_1;
  wire lockedVL_4_1$D_IN, lockedVL_4_1$EN;

  // register selectedIO_reg_0
  reg selectedIO_reg_0;
  wire selectedIO_reg_0$D_IN, selectedIO_reg_0$EN;

  // register selectedIO_reg_0_1
  reg selectedIO_reg_0_1;
  wire selectedIO_reg_0_1$D_IN, selectedIO_reg_0_1$EN;

  // register selectedIO_reg_0_2
  reg selectedIO_reg_0_2;
  wire selectedIO_reg_0_2$D_IN, selectedIO_reg_0_2$EN;

  // register selectedIO_reg_0_3
  reg selectedIO_reg_0_3;
  wire selectedIO_reg_0_3$D_IN, selectedIO_reg_0_3$EN;

  // register selectedIO_reg_0_4
  reg selectedIO_reg_0_4;
  wire selectedIO_reg_0_4$D_IN, selectedIO_reg_0_4$EN;

  // register selectedIO_reg_1
  reg selectedIO_reg_1;
  wire selectedIO_reg_1$D_IN, selectedIO_reg_1$EN;

  // register selectedIO_reg_1_1
  reg selectedIO_reg_1_1;
  wire selectedIO_reg_1_1$D_IN, selectedIO_reg_1_1$EN;

  // register selectedIO_reg_1_2
  reg selectedIO_reg_1_2;
  wire selectedIO_reg_1_2$D_IN, selectedIO_reg_1_2$EN;

  // register selectedIO_reg_1_3
  reg selectedIO_reg_1_3;
  wire selectedIO_reg_1_3$D_IN, selectedIO_reg_1_3$EN;

  // register selectedIO_reg_1_4
  reg selectedIO_reg_1_4;
  wire selectedIO_reg_1_4$D_IN, selectedIO_reg_1_4$EN;

  // register selectedIO_reg_2
  reg selectedIO_reg_2;
  wire selectedIO_reg_2$D_IN, selectedIO_reg_2$EN;

  // register selectedIO_reg_2_1
  reg selectedIO_reg_2_1;
  wire selectedIO_reg_2_1$D_IN, selectedIO_reg_2_1$EN;

  // register selectedIO_reg_2_2
  reg selectedIO_reg_2_2;
  wire selectedIO_reg_2_2$D_IN, selectedIO_reg_2_2$EN;

  // register selectedIO_reg_2_3
  reg selectedIO_reg_2_3;
  wire selectedIO_reg_2_3$D_IN, selectedIO_reg_2_3$EN;

  // register selectedIO_reg_2_4
  reg selectedIO_reg_2_4;
  wire selectedIO_reg_2_4$D_IN, selectedIO_reg_2_4$EN;

  // register selectedIO_reg_3
  reg selectedIO_reg_3;
  wire selectedIO_reg_3$D_IN, selectedIO_reg_3$EN;

  // register selectedIO_reg_3_1
  reg selectedIO_reg_3_1;
  wire selectedIO_reg_3_1$D_IN, selectedIO_reg_3_1$EN;

  // register selectedIO_reg_3_2
  reg selectedIO_reg_3_2;
  wire selectedIO_reg_3_2$D_IN, selectedIO_reg_3_2$EN;

  // register selectedIO_reg_3_3
  reg selectedIO_reg_3_3;
  wire selectedIO_reg_3_3$D_IN, selectedIO_reg_3_3$EN;

  // register selectedIO_reg_3_4
  reg selectedIO_reg_3_4;
  wire selectedIO_reg_3_4$D_IN, selectedIO_reg_3_4$EN;

  // register selectedIO_reg_4
  reg selectedIO_reg_4;
  wire selectedIO_reg_4$D_IN, selectedIO_reg_4$EN;

  // register selectedIO_reg_4_1
  reg selectedIO_reg_4_1;
  wire selectedIO_reg_4_1$D_IN, selectedIO_reg_4_1$EN;

  // register selectedIO_reg_4_2
  reg selectedIO_reg_4_2;
  wire selectedIO_reg_4_2$D_IN, selectedIO_reg_4_2$EN;

  // register selectedIO_reg_4_3
  reg selectedIO_reg_4_3;
  wire selectedIO_reg_4_3$D_IN, selectedIO_reg_4_3$EN;

  // register selectedIO_reg_4_4
  reg selectedIO_reg_4_4;
  wire selectedIO_reg_4_4$D_IN, selectedIO_reg_4_4$EN;

  // ports of submodule flitBuffers
  wire [67 : 0] flitBuffers$deq, flitBuffers$enq_data_in;
  wire [1 : 0] flitBuffers$notEmpty;
  wire flitBuffers$EN_deq,
       flitBuffers$EN_enq,
       flitBuffers$deq_fifo_out,
       flitBuffers$enq_fifo_in;

  // ports of submodule flitBuffers_1
  wire [67 : 0] flitBuffers_1$deq, flitBuffers_1$enq_data_in;
  wire [1 : 0] flitBuffers_1$notEmpty;
  wire flitBuffers_1$EN_deq,
       flitBuffers_1$EN_enq,
       flitBuffers_1$deq_fifo_out,
       flitBuffers_1$enq_fifo_in;

  // ports of submodule flitBuffers_2
  wire [67 : 0] flitBuffers_2$deq, flitBuffers_2$enq_data_in;
  wire [1 : 0] flitBuffers_2$notEmpty;
  wire flitBuffers_2$EN_deq,
       flitBuffers_2$EN_enq,
       flitBuffers_2$deq_fifo_out,
       flitBuffers_2$enq_fifo_in;

  // ports of submodule flitBuffers_3
  wire [67 : 0] flitBuffers_3$deq, flitBuffers_3$enq_data_in;
  wire [1 : 0] flitBuffers_3$notEmpty;
  wire flitBuffers_3$EN_deq,
       flitBuffers_3$EN_enq,
       flitBuffers_3$deq_fifo_out,
       flitBuffers_3$enq_fifo_in;

  // ports of submodule flitBuffers_4
  wire [67 : 0] flitBuffers_4$deq, flitBuffers_4$enq_data_in;
  wire [1 : 0] flitBuffers_4$notEmpty;
  wire flitBuffers_4$EN_deq,
       flitBuffers_4$EN_enq,
       flitBuffers_4$deq_fifo_out,
       flitBuffers_4$enq_fifo_in;

  // ports of submodule outPortFIFOs_0
  wire [2 : 0] outPortFIFOs_0$enq_sendData, outPortFIFOs_0$first;
  wire outPortFIFOs_0$EN_clear, outPortFIFOs_0$EN_deq, outPortFIFOs_0$EN_enq;

  // ports of submodule outPortFIFOs_0_1
  wire [2 : 0] outPortFIFOs_0_1$enq_sendData, outPortFIFOs_0_1$first;
  wire outPortFIFOs_0_1$EN_clear,
       outPortFIFOs_0_1$EN_deq,
       outPortFIFOs_0_1$EN_enq;

  // ports of submodule outPortFIFOs_1
  wire [2 : 0] outPortFIFOs_1$enq_sendData, outPortFIFOs_1$first;
  wire outPortFIFOs_1$EN_clear, outPortFIFOs_1$EN_deq, outPortFIFOs_1$EN_enq;

  // ports of submodule outPortFIFOs_1_1
  wire [2 : 0] outPortFIFOs_1_1$enq_sendData, outPortFIFOs_1_1$first;
  wire outPortFIFOs_1_1$EN_clear,
       outPortFIFOs_1_1$EN_deq,
       outPortFIFOs_1_1$EN_enq;

  // ports of submodule outPortFIFOs_2
  wire [2 : 0] outPortFIFOs_2$enq_sendData, outPortFIFOs_2$first;
  wire outPortFIFOs_2$EN_clear, outPortFIFOs_2$EN_deq, outPortFIFOs_2$EN_enq;

  // ports of submodule outPortFIFOs_2_1
  wire [2 : 0] outPortFIFOs_2_1$enq_sendData, outPortFIFOs_2_1$first;
  wire outPortFIFOs_2_1$EN_clear,
       outPortFIFOs_2_1$EN_deq,
       outPortFIFOs_2_1$EN_enq;

  // ports of submodule outPortFIFOs_3
  wire [2 : 0] outPortFIFOs_3$enq_sendData, outPortFIFOs_3$first;
  wire outPortFIFOs_3$EN_clear, outPortFIFOs_3$EN_deq, outPortFIFOs_3$EN_enq;

  // ports of submodule outPortFIFOs_3_1
  wire [2 : 0] outPortFIFOs_3_1$enq_sendData, outPortFIFOs_3_1$first;
  wire outPortFIFOs_3_1$EN_clear,
       outPortFIFOs_3_1$EN_deq,
       outPortFIFOs_3_1$EN_enq;

  // ports of submodule outPortFIFOs_4
  wire [2 : 0] outPortFIFOs_4$enq_sendData, outPortFIFOs_4$first;
  wire outPortFIFOs_4$EN_clear, outPortFIFOs_4$EN_deq, outPortFIFOs_4$EN_enq;

  // ports of submodule outPortFIFOs_4_1
  wire [2 : 0] outPortFIFOs_4_1$enq_sendData, outPortFIFOs_4_1$first;
  wire outPortFIFOs_4_1$EN_clear,
       outPortFIFOs_4_1$EN_deq,
       outPortFIFOs_4_1$EN_enq;

  // ports of submodule routerAlloc
  wire [24 : 0] routerAlloc$allocate, routerAlloc$allocate_alloc_input;
  wire routerAlloc$EN_allocate, routerAlloc$EN_next;

  // remaining internal signals
  reg [67 : 0] IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543;
  reg [3 : 0] CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10,
	      CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1,
	      CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9,
	      CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2,
	      CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8,
	      CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3,
	      CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7,
	      CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4,
	      CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6,
	      CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5;
  reg CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13,
      CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14,
      CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15,
      CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16,
      CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17,
      CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18,
      CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11,
      CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571,
      IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950;
  wire [67 : 0] IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1539,
		IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d876;
  wire [4 : 0] IF_IF_outPortFIFOs_0_first__90_EQ_0_91_THEN_cr_ETC___d230,
	       IF_IF_outPortFIFOs_1_first__46_EQ_0_47_THEN_cr_ETC___d186,
	       IF_IF_outPortFIFOs_2_first__01_EQ_0_02_THEN_cr_ETC___d141,
	       IF_IF_outPortFIFOs_3_first__7_EQ_0_8_THEN_cred_ETC___d97,
	       IF_IF_outPortFIFOs_4_first_EQ_0_THEN_credits_0_ETC___d53,
	       IF_flitBuffers_1_notEmpty__44_BIT_0_45_THEN_IF_ETC___d187,
	       IF_flitBuffers_2_notEmpty__9_BIT_0_00_THEN_IF__ETC___d142,
	       IF_flitBuffers_3_notEmpty__5_BIT_0_6_THEN_IF_I_ETC___d98,
	       IF_flitBuffers_4_notEmpty_BIT_0_THEN_IF_IF_out_ETC___d54,
	       IF_flitBuffers_notEmpty__88_BIT_0_89_THEN_IF_I_ETC___d231;
  wire [3 : 0] credits_0_1_read__3_PLUS_1___d1235,
	       credits_0_read_PLUS_1___d1234,
	       credits_1_1_read__5_PLUS_1___d1237,
	       credits_1_read_PLUS_1___d1236,
	       credits_2_1_read__7_PLUS_1___d1239,
	       credits_2_read_PLUS_1___d1238,
	       credits_3_1_read__9_PLUS_1___d1241,
	       credits_3_read__1_PLUS_1___d1240,
	       credits_4_1_read__1_PLUS_1___d1243,
	       credits_4_read__3_PLUS_1___d1242,
	       outport_encoder___d1472,
	       outport_encoder___d1473,
	       outport_encoder___d1474,
	       outport_encoder___d1475,
	       outport_encoder___d1476,
	       x__h42741,
	       x__h43471,
	       x__h44414,
	       x__h45144,
	       x__h46087,
	       x__h46817,
	       x__h47760,
	       x__h48490,
	       x__h49433,
	       x__h50163;
  wire [2 : 0] IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1230,
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1231,
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1232,
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1233,
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1226,
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1227,
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1228,
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1229,
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1222,
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1223,
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1224,
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1225,
	       active_in__h58594,
	       active_in__h60337,
	       active_in__h62080,
	       active_in__h63823;
  wire IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1559,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d822,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d823,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d824,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d840,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d848,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d858,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d859,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d860,
       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d861,
       IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409,
       IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450,
       IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451,
       IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1017,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1023,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1096,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1102,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1175,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1181,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d842,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d850,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d938,
       IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d944,
       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1316,
       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1326,
       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1334,
       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1342,
       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1350,
       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1497,
       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1502,
       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1507,
       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1512,
       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1517,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1313,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1324,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1332,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1340,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1348,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1484,
       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1487,
       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1498,
       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1503,
       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1508,
       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1513,
       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1518,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1465,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1466,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1467,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1468,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1469,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1485,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1488,
       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1490,
       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1499,
       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1504,
       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1509,
       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1514,
       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1519,
       NOT_IF_outPortFIFOs_0_first__90_EQ_0_91_THEN_c_ETC___d652,
       NOT_IF_outPortFIFOs_1_first__46_EQ_0_47_THEN_c_ETC___d670,
       NOT_IF_outPortFIFOs_2_first__01_EQ_0_02_THEN_c_ETC___d688,
       NOT_IF_outPortFIFOs_3_first__7_EQ_0_8_THEN_cre_ETC___d706,
       NOT_IF_outPortFIFOs_4_first_EQ_0_THEN_credits__ETC___d724,
       fifo_out__h38368,
       fifo_out__h39552,
       fifo_out__h40097,
       fifo_out__h40642,
       fifo_out__h41187,
       flitBuffers_1_notEmpty__44_BIT_0_45_AND_NOT_IF_ETC___d318,
       flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d1527,
       flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d173,
       flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d175,
       flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d177,
       flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d180,
       flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d182,
       flitBuffers_2_notEmpty__9_BIT_0_00_AND_NOT_IF__ETC___d349,
       flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d128,
       flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d130,
       flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d132,
       flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d135,
       flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d137,
       flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d1528,
       flitBuffers_3_notEmpty__5_BIT_0_6_AND_NOT_IF_o_ETC___d380,
       flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d1529,
       flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d84,
       flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d86,
       flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d88,
       flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d91,
       flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d93,
       flitBuffers_4_notEmpty_BIT_0_AND_NOT_IF_outPor_ETC___d411,
       flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d1530,
       flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d40,
       flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d42,
       flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d44,
       flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d47,
       flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d49,
       flitBuffers_notEmpty__88_BIT_0_89_AND_NOT_IF_o_ETC___d287,
       flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d1526,
       flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d217,
       flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d219,
       flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d221,
       flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d224,
       flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d226,
       outport_encoder_00_BIT_3_01_AND_IF_flitBuffers_ETC___d726,
       outport_encoder_07_BIT_3_08_AND_IF_flitBuffers_ETC___d672,
       outport_encoder_38_BIT_3_39_AND_IF_flitBuffers_ETC___d690,
       outport_encoder_69_BIT_3_70_AND_IF_flitBuffers_ETC___d708,
       outport_encoder_76_BIT_3_77_AND_IF_flitBuffers_ETC___d654;

  // actionvalue method in_ports_0_getCredits
  assign in_ports_0_getCredits =
	     { outport_encoder_76_BIT_3_77_AND_IF_flitBuffers_ETC___d654,
	       fifo_out__h38368 } ;

  // actionvalue method in_ports_1_getCredits
  assign in_ports_1_getCredits =
	     { outport_encoder_07_BIT_3_08_AND_IF_flitBuffers_ETC___d672,
	       fifo_out__h39552 } ;

  // actionvalue method in_ports_2_getCredits
  assign in_ports_2_getCredits =
	     { outport_encoder_38_BIT_3_39_AND_IF_flitBuffers_ETC___d690,
	       fifo_out__h40097 } ;

  // actionvalue method in_ports_3_getCredits
  assign in_ports_3_getCredits =
	     { outport_encoder_69_BIT_3_70_AND_IF_flitBuffers_ETC___d708,
	       fifo_out__h40642 } ;

  // actionvalue method in_ports_4_getCredits
  assign in_ports_4_getCredits =
	     { outport_encoder_00_BIT_3_01_AND_IF_flitBuffers_ETC___d726,
	       fifo_out__h41187 } ;

  // actionvalue method out_ports_0_getFlit
  assign out_ports_0_getFlit =
	     { IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d861,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1539 } ;

  // actionvalue method out_ports_1_getFlit
  assign out_ports_1_getFlit =
	     { IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 } ;

  // actionvalue method out_ports_2_getFlit
  assign out_ports_2_getFlit =
	     { IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 } ;

  // actionvalue method out_ports_3_getFlit
  assign out_ports_3_getFlit =
	     { IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 } ;

  // actionvalue method out_ports_4_getFlit
  assign out_ports_4_getFlit =
	     { IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187,
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 } ;

  // submodule flitBuffers
  mkInputVCQueues flitBuffers(.CLK(CLK),
			      .RST_N(RST_N),
			      .deq_fifo_out(flitBuffers$deq_fifo_out),
			      .enq_data_in(flitBuffers$enq_data_in),
			      .enq_fifo_in(flitBuffers$enq_fifo_in),
			      .EN_enq(flitBuffers$EN_enq),
			      .EN_deq(flitBuffers$EN_deq),
			      .deq(flitBuffers$deq),
			      .notEmpty(flitBuffers$notEmpty),
			      .notFull());

  // submodule flitBuffers_1
  mkInputVCQueues flitBuffers_1(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_1$deq_fifo_out),
				.enq_data_in(flitBuffers_1$enq_data_in),
				.enq_fifo_in(flitBuffers_1$enq_fifo_in),
				.EN_enq(flitBuffers_1$EN_enq),
				.EN_deq(flitBuffers_1$EN_deq),
				.deq(flitBuffers_1$deq),
				.notEmpty(flitBuffers_1$notEmpty),
				.notFull());

  // submodule flitBuffers_2
  mkInputVCQueues flitBuffers_2(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_2$deq_fifo_out),
				.enq_data_in(flitBuffers_2$enq_data_in),
				.enq_fifo_in(flitBuffers_2$enq_fifo_in),
				.EN_enq(flitBuffers_2$EN_enq),
				.EN_deq(flitBuffers_2$EN_deq),
				.deq(flitBuffers_2$deq),
				.notEmpty(flitBuffers_2$notEmpty),
				.notFull());

  // submodule flitBuffers_3
  mkInputVCQueues flitBuffers_3(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_3$deq_fifo_out),
				.enq_data_in(flitBuffers_3$enq_data_in),
				.enq_fifo_in(flitBuffers_3$enq_fifo_in),
				.EN_enq(flitBuffers_3$EN_enq),
				.EN_deq(flitBuffers_3$EN_deq),
				.deq(flitBuffers_3$deq),
				.notEmpty(flitBuffers_3$notEmpty),
				.notFull());

  // submodule flitBuffers_4
  mkInputVCQueues flitBuffers_4(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_4$deq_fifo_out),
				.enq_data_in(flitBuffers_4$enq_data_in),
				.enq_fifo_in(flitBuffers_4$enq_fifo_in),
				.EN_enq(flitBuffers_4$EN_enq),
				.EN_deq(flitBuffers_4$EN_deq),
				.deq(flitBuffers_4$deq),
				.notEmpty(flitBuffers_4$notEmpty),
				.notFull());

  // submodule outPortFIFOs_0
  mkOutPortFIFO outPortFIFOs_0(.CLK(CLK),
			       .RST_N(RST_N),
			       .enq_sendData(outPortFIFOs_0$enq_sendData),
			       .EN_enq(outPortFIFOs_0$EN_enq),
			       .EN_deq(outPortFIFOs_0$EN_deq),
			       .EN_clear(outPortFIFOs_0$EN_clear),
			       .RDY_enq(),
			       .RDY_deq(),
			       .first(outPortFIFOs_0$first),
			       .RDY_first(),
			       .notFull(),
			       .RDY_notFull(),
			       .notEmpty(),
			       .RDY_notEmpty(),
			       .count(),
			       .RDY_count(),
			       .RDY_clear());

  // submodule outPortFIFOs_0_1
  mkOutPortFIFO outPortFIFOs_0_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_0_1$enq_sendData),
				 .EN_enq(outPortFIFOs_0_1$EN_enq),
				 .EN_deq(outPortFIFOs_0_1$EN_deq),
				 .EN_clear(outPortFIFOs_0_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_0_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_1
  mkOutPortFIFO outPortFIFOs_1(.CLK(CLK),
			       .RST_N(RST_N),
			       .enq_sendData(outPortFIFOs_1$enq_sendData),
			       .EN_enq(outPortFIFOs_1$EN_enq),
			       .EN_deq(outPortFIFOs_1$EN_deq),
			       .EN_clear(outPortFIFOs_1$EN_clear),
			       .RDY_enq(),
			       .RDY_deq(),
			       .first(outPortFIFOs_1$first),
			       .RDY_first(),
			       .notFull(),
			       .RDY_notFull(),
			       .notEmpty(),
			       .RDY_notEmpty(),
			       .count(),
			       .RDY_count(),
			       .RDY_clear());

  // submodule outPortFIFOs_1_1
  mkOutPortFIFO outPortFIFOs_1_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_1_1$enq_sendData),
				 .EN_enq(outPortFIFOs_1_1$EN_enq),
				 .EN_deq(outPortFIFOs_1_1$EN_deq),
				 .EN_clear(outPortFIFOs_1_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_1_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_2
  mkOutPortFIFO outPortFIFOs_2(.CLK(CLK),
			       .RST_N(RST_N),
			       .enq_sendData(outPortFIFOs_2$enq_sendData),
			       .EN_enq(outPortFIFOs_2$EN_enq),
			       .EN_deq(outPortFIFOs_2$EN_deq),
			       .EN_clear(outPortFIFOs_2$EN_clear),
			       .RDY_enq(),
			       .RDY_deq(),
			       .first(outPortFIFOs_2$first),
			       .RDY_first(),
			       .notFull(),
			       .RDY_notFull(),
			       .notEmpty(),
			       .RDY_notEmpty(),
			       .count(),
			       .RDY_count(),
			       .RDY_clear());

  // submodule outPortFIFOs_2_1
  mkOutPortFIFO outPortFIFOs_2_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_2_1$enq_sendData),
				 .EN_enq(outPortFIFOs_2_1$EN_enq),
				 .EN_deq(outPortFIFOs_2_1$EN_deq),
				 .EN_clear(outPortFIFOs_2_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_2_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_3
  mkOutPortFIFO outPortFIFOs_3(.CLK(CLK),
			       .RST_N(RST_N),
			       .enq_sendData(outPortFIFOs_3$enq_sendData),
			       .EN_enq(outPortFIFOs_3$EN_enq),
			       .EN_deq(outPortFIFOs_3$EN_deq),
			       .EN_clear(outPortFIFOs_3$EN_clear),
			       .RDY_enq(),
			       .RDY_deq(),
			       .first(outPortFIFOs_3$first),
			       .RDY_first(),
			       .notFull(),
			       .RDY_notFull(),
			       .notEmpty(),
			       .RDY_notEmpty(),
			       .count(),
			       .RDY_count(),
			       .RDY_clear());

  // submodule outPortFIFOs_3_1
  mkOutPortFIFO outPortFIFOs_3_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_3_1$enq_sendData),
				 .EN_enq(outPortFIFOs_3_1$EN_enq),
				 .EN_deq(outPortFIFOs_3_1$EN_deq),
				 .EN_clear(outPortFIFOs_3_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_3_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_4
  mkOutPortFIFO outPortFIFOs_4(.CLK(CLK),
			       .RST_N(RST_N),
			       .enq_sendData(outPortFIFOs_4$enq_sendData),
			       .EN_enq(outPortFIFOs_4$EN_enq),
			       .EN_deq(outPortFIFOs_4$EN_deq),
			       .EN_clear(outPortFIFOs_4$EN_clear),
			       .RDY_enq(),
			       .RDY_deq(),
			       .first(outPortFIFOs_4$first),
			       .RDY_first(),
			       .notFull(),
			       .RDY_notFull(),
			       .notEmpty(),
			       .RDY_notEmpty(),
			       .count(),
			       .RDY_count(),
			       .RDY_clear());

  // submodule outPortFIFOs_4_1
  mkOutPortFIFO outPortFIFOs_4_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_4_1$enq_sendData),
				 .EN_enq(outPortFIFOs_4_1$EN_enq),
				 .EN_deq(outPortFIFOs_4_1$EN_deq),
				 .EN_clear(outPortFIFOs_4_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_4_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule routerAlloc
  mkSepRouterAllocator routerAlloc(.pipeline(1'd0),
				   .CLK(CLK),
				   .RST_N(RST_N),
				   .allocate_alloc_input(routerAlloc$allocate_alloc_input),
				   .EN_allocate(routerAlloc$EN_allocate),
				   .EN_next(routerAlloc$EN_next),
				   .allocate(routerAlloc$allocate));

  // inlined wires
  assign hasFlitsToSend_perIn$wget = { 1'd1, flitBuffers$deq } ;
  assign hasFlitsToSend_perIn_1$wget = { 1'd1, flitBuffers_1$deq } ;
  assign hasFlitsToSend_perIn_2$wget = { 1'd1, flitBuffers_2$deq } ;
  assign hasFlitsToSend_perIn_3$wget = { 1'd1, flitBuffers_3$deq } ;
  assign hasFlitsToSend_perIn_4$wget = { 1'd1, flitBuffers_4$deq } ;
  assign credits_set_0$whas =
	     EN_out_ports_0_putCredits && out_ports_0_putCredits_cr_in[1] &&
	     !out_ports_0_putCredits_cr_in[0] ;
  assign credits_set_0_1$whas =
	     EN_out_ports_0_putCredits && out_ports_0_putCredits_cr_in[1] &&
	     out_ports_0_putCredits_cr_in[0] ;
  assign credits_clear_0$whas =
	     EN_out_ports_0_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d842 ;
  assign credits_clear_0_1$whas =
	     EN_out_ports_0_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d850 ;
  assign credits_set_1$whas =
	     EN_out_ports_1_putCredits && out_ports_1_putCredits_cr_in[1] &&
	     !out_ports_1_putCredits_cr_in[0] ;
  assign credits_set_1_1$whas =
	     EN_out_ports_1_putCredits && out_ports_1_putCredits_cr_in[1] &&
	     out_ports_1_putCredits_cr_in[0] ;
  assign credits_clear_1$whas =
	     EN_out_ports_1_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d938 ;
  assign credits_clear_1_1$whas =
	     EN_out_ports_1_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d944 ;
  assign credits_set_2$whas =
	     EN_out_ports_2_putCredits && out_ports_2_putCredits_cr_in[1] &&
	     !out_ports_2_putCredits_cr_in[0] ;
  assign credits_set_2_1$whas =
	     EN_out_ports_2_putCredits && out_ports_2_putCredits_cr_in[1] &&
	     out_ports_2_putCredits_cr_in[0] ;
  assign credits_clear_2$whas =
	     EN_out_ports_2_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1017 ;
  assign credits_clear_2_1$whas =
	     EN_out_ports_2_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1023 ;
  assign credits_set_3$whas =
	     EN_out_ports_3_putCredits && out_ports_3_putCredits_cr_in[1] &&
	     !out_ports_3_putCredits_cr_in[0] ;
  assign credits_set_3_1$whas =
	     EN_out_ports_3_putCredits && out_ports_3_putCredits_cr_in[1] &&
	     out_ports_3_putCredits_cr_in[0] ;
  assign credits_clear_3$whas =
	     EN_out_ports_3_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1096 ;
  assign credits_clear_3_1$whas =
	     EN_out_ports_3_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1102 ;
  assign credits_set_4$whas =
	     EN_out_ports_4_putCredits && out_ports_4_putCredits_cr_in[1] &&
	     !out_ports_4_putCredits_cr_in[0] ;
  assign credits_set_4_1$whas =
	     EN_out_ports_4_putCredits && out_ports_4_putCredits_cr_in[1] &&
	     out_ports_4_putCredits_cr_in[0] ;
  assign credits_clear_4$whas =
	     EN_out_ports_4_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1175 ;
  assign credits_clear_4_1$whas =
	     EN_out_ports_4_getFlit &&
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1181 ;

  // register activeVC_perIn_reg
  assign activeVC_perIn_reg$D_IN = 2'h0 ;
  assign activeVC_perIn_reg$EN = 1'b0 ;

  // register activeVC_perIn_reg_1
  assign activeVC_perIn_reg_1$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_1$EN = 1'b0 ;

  // register activeVC_perIn_reg_2
  assign activeVC_perIn_reg_2$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_2$EN = 1'b0 ;

  // register activeVC_perIn_reg_3
  assign activeVC_perIn_reg_3$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_3$EN = 1'b0 ;

  // register activeVC_perIn_reg_4
  assign activeVC_perIn_reg_4$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_4$EN = 1'b0 ;

  // register credits_0
  assign credits_0$D_IN =
	     (credits_set_0$whas && !credits_clear_0$whas) ?
	       credits_0_read_PLUS_1___d1234 :
	       x__h42741 ;
  assign credits_0$EN =
	     credits_set_0$whas && !credits_clear_0$whas ||
	     !credits_set_0$whas && credits_clear_0$whas ;

  // register credits_0_1
  assign credits_0_1$D_IN =
	     (credits_set_0_1$whas && !credits_clear_0_1$whas) ?
	       credits_0_1_read__3_PLUS_1___d1235 :
	       x__h43471 ;
  assign credits_0_1$EN =
	     credits_set_0_1$whas && !credits_clear_0_1$whas ||
	     !credits_set_0_1$whas && credits_clear_0_1$whas ;

  // register credits_1
  assign credits_1$D_IN =
	     (credits_set_1$whas && !credits_clear_1$whas) ?
	       credits_1_read_PLUS_1___d1236 :
	       x__h44414 ;
  assign credits_1$EN =
	     credits_set_1$whas && !credits_clear_1$whas ||
	     !credits_set_1$whas && credits_clear_1$whas ;

  // register credits_1_1
  assign credits_1_1$D_IN =
	     (credits_set_1_1$whas && !credits_clear_1_1$whas) ?
	       credits_1_1_read__5_PLUS_1___d1237 :
	       x__h45144 ;
  assign credits_1_1$EN =
	     credits_set_1_1$whas && !credits_clear_1_1$whas ||
	     !credits_set_1_1$whas && credits_clear_1_1$whas ;

  // register credits_2
  assign credits_2$D_IN =
	     (credits_set_2$whas && !credits_clear_2$whas) ?
	       credits_2_read_PLUS_1___d1238 :
	       x__h46087 ;
  assign credits_2$EN =
	     credits_set_2$whas && !credits_clear_2$whas ||
	     !credits_set_2$whas && credits_clear_2$whas ;

  // register credits_2_1
  assign credits_2_1$D_IN =
	     (credits_set_2_1$whas && !credits_clear_2_1$whas) ?
	       credits_2_1_read__7_PLUS_1___d1239 :
	       x__h46817 ;
  assign credits_2_1$EN =
	     credits_set_2_1$whas && !credits_clear_2_1$whas ||
	     !credits_set_2_1$whas && credits_clear_2_1$whas ;

  // register credits_3
  assign credits_3$D_IN =
	     (credits_set_3$whas && !credits_clear_3$whas) ?
	       credits_3_read__1_PLUS_1___d1240 :
	       x__h47760 ;
  assign credits_3$EN =
	     credits_set_3$whas && !credits_clear_3$whas ||
	     !credits_set_3$whas && credits_clear_3$whas ;

  // register credits_3_1
  assign credits_3_1$D_IN =
	     (credits_set_3_1$whas && !credits_clear_3_1$whas) ?
	       credits_3_1_read__9_PLUS_1___d1241 :
	       x__h48490 ;
  assign credits_3_1$EN =
	     credits_set_3_1$whas && !credits_clear_3_1$whas ||
	     !credits_set_3_1$whas && credits_clear_3_1$whas ;

  // register credits_4
  assign credits_4$D_IN =
	     (credits_set_4$whas && !credits_clear_4$whas) ?
	       credits_4_read__3_PLUS_1___d1242 :
	       x__h49433 ;
  assign credits_4$EN =
	     credits_set_4$whas && !credits_clear_4$whas ||
	     !credits_set_4$whas && credits_clear_4$whas ;

  // register credits_4_1
  assign credits_4_1$D_IN =
	     (credits_set_4_1$whas && !credits_clear_4_1$whas) ?
	       credits_4_1_read__1_PLUS_1___d1243 :
	       x__h50163 ;
  assign credits_4_1$EN =
	     credits_set_4_1$whas && !credits_clear_4_1$whas ||
	     !credits_set_4_1$whas && credits_clear_4_1$whas ;

  // register inPortVL_0
  assign inPortVL_0$D_IN = 3'h0 ;
  assign inPortVL_0$EN = 1'b0 ;

  // register inPortVL_0_1
  assign inPortVL_0_1$D_IN = 3'h0 ;
  assign inPortVL_0_1$EN = 1'b0 ;

  // register inPortVL_1
  assign inPortVL_1$D_IN = 3'h0 ;
  assign inPortVL_1$EN = 1'b0 ;

  // register inPortVL_1_1
  assign inPortVL_1_1$D_IN = 3'h0 ;
  assign inPortVL_1_1$EN = 1'b0 ;

  // register inPortVL_2
  assign inPortVL_2$D_IN = 3'h0 ;
  assign inPortVL_2$EN = 1'b0 ;

  // register inPortVL_2_1
  assign inPortVL_2_1$D_IN = 3'h0 ;
  assign inPortVL_2_1$EN = 1'b0 ;

  // register inPortVL_3
  assign inPortVL_3$D_IN = 3'h0 ;
  assign inPortVL_3$EN = 1'b0 ;

  // register inPortVL_3_1
  assign inPortVL_3_1$D_IN = 3'h0 ;
  assign inPortVL_3_1$EN = 1'b0 ;

  // register inPortVL_4
  assign inPortVL_4$D_IN = 3'h0 ;
  assign inPortVL_4$EN = 1'b0 ;

  // register inPortVL_4_1
  assign inPortVL_4_1$D_IN = 3'h0 ;
  assign inPortVL_4_1$EN = 1'b0 ;

  // register lockedVL_0
  assign lockedVL_0$D_IN = 1'b0 ;
  assign lockedVL_0$EN = 1'b0 ;

  // register lockedVL_0_1
  assign lockedVL_0_1$D_IN = 1'b0 ;
  assign lockedVL_0_1$EN = 1'b0 ;

  // register lockedVL_1
  assign lockedVL_1$D_IN = 1'b0 ;
  assign lockedVL_1$EN = 1'b0 ;

  // register lockedVL_1_1
  assign lockedVL_1_1$D_IN = 1'b0 ;
  assign lockedVL_1_1$EN = 1'b0 ;

  // register lockedVL_2
  assign lockedVL_2$D_IN = 1'b0 ;
  assign lockedVL_2$EN = 1'b0 ;

  // register lockedVL_2_1
  assign lockedVL_2_1$D_IN = 1'b0 ;
  assign lockedVL_2_1$EN = 1'b0 ;

  // register lockedVL_3
  assign lockedVL_3$D_IN = 1'b0 ;
  assign lockedVL_3$EN = 1'b0 ;

  // register lockedVL_3_1
  assign lockedVL_3_1$D_IN = 1'b0 ;
  assign lockedVL_3_1$EN = 1'b0 ;

  // register lockedVL_4
  assign lockedVL_4$D_IN = 1'b0 ;
  assign lockedVL_4$EN = 1'b0 ;

  // register lockedVL_4_1
  assign lockedVL_4_1$D_IN = 1'b0 ;
  assign lockedVL_4_1$EN = 1'b0 ;

  // register selectedIO_reg_0
  assign selectedIO_reg_0$D_IN = 1'b0 ;
  assign selectedIO_reg_0$EN = 1'b0 ;

  // register selectedIO_reg_0_1
  assign selectedIO_reg_0_1$D_IN = 1'b0 ;
  assign selectedIO_reg_0_1$EN = 1'b0 ;

  // register selectedIO_reg_0_2
  assign selectedIO_reg_0_2$D_IN = 1'b0 ;
  assign selectedIO_reg_0_2$EN = 1'b0 ;

  // register selectedIO_reg_0_3
  assign selectedIO_reg_0_3$D_IN = 1'b0 ;
  assign selectedIO_reg_0_3$EN = 1'b0 ;

  // register selectedIO_reg_0_4
  assign selectedIO_reg_0_4$D_IN = 1'b0 ;
  assign selectedIO_reg_0_4$EN = 1'b0 ;

  // register selectedIO_reg_1
  assign selectedIO_reg_1$D_IN = 1'b0 ;
  assign selectedIO_reg_1$EN = 1'b0 ;

  // register selectedIO_reg_1_1
  assign selectedIO_reg_1_1$D_IN = 1'b0 ;
  assign selectedIO_reg_1_1$EN = 1'b0 ;

  // register selectedIO_reg_1_2
  assign selectedIO_reg_1_2$D_IN = 1'b0 ;
  assign selectedIO_reg_1_2$EN = 1'b0 ;

  // register selectedIO_reg_1_3
  assign selectedIO_reg_1_3$D_IN = 1'b0 ;
  assign selectedIO_reg_1_3$EN = 1'b0 ;

  // register selectedIO_reg_1_4
  assign selectedIO_reg_1_4$D_IN = 1'b0 ;
  assign selectedIO_reg_1_4$EN = 1'b0 ;

  // register selectedIO_reg_2
  assign selectedIO_reg_2$D_IN = 1'b0 ;
  assign selectedIO_reg_2$EN = 1'b0 ;

  // register selectedIO_reg_2_1
  assign selectedIO_reg_2_1$D_IN = 1'b0 ;
  assign selectedIO_reg_2_1$EN = 1'b0 ;

  // register selectedIO_reg_2_2
  assign selectedIO_reg_2_2$D_IN = 1'b0 ;
  assign selectedIO_reg_2_2$EN = 1'b0 ;

  // register selectedIO_reg_2_3
  assign selectedIO_reg_2_3$D_IN = 1'b0 ;
  assign selectedIO_reg_2_3$EN = 1'b0 ;

  // register selectedIO_reg_2_4
  assign selectedIO_reg_2_4$D_IN = 1'b0 ;
  assign selectedIO_reg_2_4$EN = 1'b0 ;

  // register selectedIO_reg_3
  assign selectedIO_reg_3$D_IN = 1'b0 ;
  assign selectedIO_reg_3$EN = 1'b0 ;

  // register selectedIO_reg_3_1
  assign selectedIO_reg_3_1$D_IN = 1'b0 ;
  assign selectedIO_reg_3_1$EN = 1'b0 ;

  // register selectedIO_reg_3_2
  assign selectedIO_reg_3_2$D_IN = 1'b0 ;
  assign selectedIO_reg_3_2$EN = 1'b0 ;

  // register selectedIO_reg_3_3
  assign selectedIO_reg_3_3$D_IN = 1'b0 ;
  assign selectedIO_reg_3_3$EN = 1'b0 ;

  // register selectedIO_reg_3_4
  assign selectedIO_reg_3_4$D_IN = 1'b0 ;
  assign selectedIO_reg_3_4$EN = 1'b0 ;

  // register selectedIO_reg_4
  assign selectedIO_reg_4$D_IN = 1'b0 ;
  assign selectedIO_reg_4$EN = 1'b0 ;

  // register selectedIO_reg_4_1
  assign selectedIO_reg_4_1$D_IN = 1'b0 ;
  assign selectedIO_reg_4_1$EN = 1'b0 ;

  // register selectedIO_reg_4_2
  assign selectedIO_reg_4_2$D_IN = 1'b0 ;
  assign selectedIO_reg_4_2$EN = 1'b0 ;

  // register selectedIO_reg_4_3
  assign selectedIO_reg_4_3$D_IN = 1'b0 ;
  assign selectedIO_reg_4_3$EN = 1'b0 ;

  // register selectedIO_reg_4_4
  assign selectedIO_reg_4_4$D_IN = 1'b0 ;
  assign selectedIO_reg_4_4$EN = 1'b0 ;

  // submodule flitBuffers
  assign flitBuffers$deq_fifo_out = fifo_out__h38368 ;
  assign flitBuffers$enq_data_in = in_ports_0_putRoutedFlit_flit_in[70:3] ;
  assign flitBuffers$enq_fifo_in = in_ports_0_putRoutedFlit_flit_in[67] ;
  assign flitBuffers$EN_enq =
	     EN_in_ports_0_putRoutedFlit &&
	     in_ports_0_putRoutedFlit_flit_in[71] ;
  assign flitBuffers$EN_deq = outport_encoder___d1476[3] ;

  // submodule flitBuffers_1
  assign flitBuffers_1$deq_fifo_out = fifo_out__h39552 ;
  assign flitBuffers_1$enq_data_in = in_ports_1_putRoutedFlit_flit_in[70:3] ;
  assign flitBuffers_1$enq_fifo_in = in_ports_1_putRoutedFlit_flit_in[67] ;
  assign flitBuffers_1$EN_enq =
	     EN_in_ports_1_putRoutedFlit &&
	     in_ports_1_putRoutedFlit_flit_in[71] ;
  assign flitBuffers_1$EN_deq = outport_encoder___d1475[3] ;

  // submodule flitBuffers_2
  assign flitBuffers_2$deq_fifo_out = fifo_out__h40097 ;
  assign flitBuffers_2$enq_data_in = in_ports_2_putRoutedFlit_flit_in[70:3] ;
  assign flitBuffers_2$enq_fifo_in = in_ports_2_putRoutedFlit_flit_in[67] ;
  assign flitBuffers_2$EN_enq =
	     EN_in_ports_2_putRoutedFlit &&
	     in_ports_2_putRoutedFlit_flit_in[71] ;
  assign flitBuffers_2$EN_deq = outport_encoder___d1474[3] ;

  // submodule flitBuffers_3
  assign flitBuffers_3$deq_fifo_out = fifo_out__h40642 ;
  assign flitBuffers_3$enq_data_in = in_ports_3_putRoutedFlit_flit_in[70:3] ;
  assign flitBuffers_3$enq_fifo_in = in_ports_3_putRoutedFlit_flit_in[67] ;
  assign flitBuffers_3$EN_enq =
	     EN_in_ports_3_putRoutedFlit &&
	     in_ports_3_putRoutedFlit_flit_in[71] ;
  assign flitBuffers_3$EN_deq = outport_encoder___d1473[3] ;

  // submodule flitBuffers_4
  assign flitBuffers_4$deq_fifo_out = fifo_out__h41187 ;
  assign flitBuffers_4$enq_data_in = in_ports_4_putRoutedFlit_flit_in[70:3] ;
  assign flitBuffers_4$enq_fifo_in = in_ports_4_putRoutedFlit_flit_in[67] ;
  assign flitBuffers_4$EN_enq =
	     EN_in_ports_4_putRoutedFlit &&
	     in_ports_4_putRoutedFlit_flit_in[71] ;
  assign flitBuffers_4$EN_deq = outport_encoder___d1472[3] ;

  // submodule outPortFIFOs_0
  assign outPortFIFOs_0$enq_sendData = in_ports_0_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_0$EN_enq =
	     EN_in_ports_0_putRoutedFlit &&
	     in_ports_0_putRoutedFlit_flit_in[71] &&
	     !in_ports_0_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_0$EN_deq =
	     outport_encoder___d1476[3] &&
	     flitBuffers_notEmpty__88_BIT_0_89_AND_NOT_IF_o_ETC___d287 ;
  assign outPortFIFOs_0$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_0_1
  assign outPortFIFOs_0_1$enq_sendData =
	     in_ports_0_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_0_1$EN_enq =
	     EN_in_ports_0_putRoutedFlit &&
	     in_ports_0_putRoutedFlit_flit_in[71] &&
	     in_ports_0_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_0_1$EN_deq =
	     outport_encoder___d1476[3] && fifo_out__h38368 ;
  assign outPortFIFOs_0_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_1
  assign outPortFIFOs_1$enq_sendData = in_ports_1_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_1$EN_enq =
	     EN_in_ports_1_putRoutedFlit &&
	     in_ports_1_putRoutedFlit_flit_in[71] &&
	     !in_ports_1_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_1$EN_deq =
	     outport_encoder___d1475[3] &&
	     flitBuffers_1_notEmpty__44_BIT_0_45_AND_NOT_IF_ETC___d318 ;
  assign outPortFIFOs_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_1_1
  assign outPortFIFOs_1_1$enq_sendData =
	     in_ports_1_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_1_1$EN_enq =
	     EN_in_ports_1_putRoutedFlit &&
	     in_ports_1_putRoutedFlit_flit_in[71] &&
	     in_ports_1_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_1_1$EN_deq =
	     outport_encoder___d1475[3] && fifo_out__h39552 ;
  assign outPortFIFOs_1_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_2
  assign outPortFIFOs_2$enq_sendData = in_ports_2_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_2$EN_enq =
	     EN_in_ports_2_putRoutedFlit &&
	     in_ports_2_putRoutedFlit_flit_in[71] &&
	     !in_ports_2_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_2$EN_deq =
	     outport_encoder___d1474[3] &&
	     flitBuffers_2_notEmpty__9_BIT_0_00_AND_NOT_IF__ETC___d349 ;
  assign outPortFIFOs_2$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_2_1
  assign outPortFIFOs_2_1$enq_sendData =
	     in_ports_2_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_2_1$EN_enq =
	     EN_in_ports_2_putRoutedFlit &&
	     in_ports_2_putRoutedFlit_flit_in[71] &&
	     in_ports_2_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_2_1$EN_deq =
	     outport_encoder___d1474[3] && fifo_out__h40097 ;
  assign outPortFIFOs_2_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_3
  assign outPortFIFOs_3$enq_sendData = in_ports_3_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_3$EN_enq =
	     EN_in_ports_3_putRoutedFlit &&
	     in_ports_3_putRoutedFlit_flit_in[71] &&
	     !in_ports_3_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_3$EN_deq =
	     outport_encoder___d1473[3] &&
	     flitBuffers_3_notEmpty__5_BIT_0_6_AND_NOT_IF_o_ETC___d380 ;
  assign outPortFIFOs_3$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_3_1
  assign outPortFIFOs_3_1$enq_sendData =
	     in_ports_3_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_3_1$EN_enq =
	     EN_in_ports_3_putRoutedFlit &&
	     in_ports_3_putRoutedFlit_flit_in[71] &&
	     in_ports_3_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_3_1$EN_deq =
	     outport_encoder___d1473[3] && fifo_out__h40642 ;
  assign outPortFIFOs_3_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_4
  assign outPortFIFOs_4$enq_sendData = in_ports_4_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_4$EN_enq =
	     EN_in_ports_4_putRoutedFlit &&
	     in_ports_4_putRoutedFlit_flit_in[71] &&
	     !in_ports_4_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_4$EN_deq =
	     outport_encoder___d1472[3] &&
	     flitBuffers_4_notEmpty_BIT_0_AND_NOT_IF_outPor_ETC___d411 ;
  assign outPortFIFOs_4$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_4_1
  assign outPortFIFOs_4_1$enq_sendData =
	     in_ports_4_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_4_1$EN_enq =
	     EN_in_ports_4_putRoutedFlit &&
	     in_ports_4_putRoutedFlit_flit_in[71] &&
	     in_ports_4_putRoutedFlit_flit_in[67] ;
  assign outPortFIFOs_4_1$EN_deq =
	     outport_encoder___d1472[3] && fifo_out__h41187 ;
  assign outPortFIFOs_4_1$EN_clear = 1'b0 ;

  // submodule routerAlloc
  assign routerAlloc$allocate_alloc_input =
	     { IF_flitBuffers_4_notEmpty_BIT_0_THEN_IF_IF_out_ETC___d54,
	       IF_flitBuffers_3_notEmpty__5_BIT_0_6_THEN_IF_I_ETC___d98,
	       IF_flitBuffers_2_notEmpty__9_BIT_0_00_THEN_IF__ETC___d142,
	       IF_flitBuffers_1_notEmpty__44_BIT_0_45_THEN_IF_ETC___d187,
	       IF_flitBuffers_notEmpty__88_BIT_0_89_THEN_IF_I_ETC___d231 } ;
  assign routerAlloc$EN_allocate = 1'd1 ;
  assign routerAlloc$EN_next = 1'd1 ;

  // remaining internal signals
  module_outport_encoder instance_outport_encoder_1(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[4],
									     1'd1 &&
									     routerAlloc$allocate[3],
									     1'd1 &&
									     routerAlloc$allocate[2] },
									   1'd1 &&
									   routerAlloc$allocate[1],
									   1'd1 &&
									   routerAlloc$allocate[0] }),
						    .outport_encoder(outport_encoder___d1476));
  module_outport_encoder instance_outport_encoder_0(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[9],
									     1'd1 &&
									     routerAlloc$allocate[8],
									     1'd1 &&
									     routerAlloc$allocate[7] },
									   1'd1 &&
									   routerAlloc$allocate[6],
									   1'd1 &&
									   routerAlloc$allocate[5] }),
						    .outport_encoder(outport_encoder___d1475));
  module_outport_encoder instance_outport_encoder_2(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[14],
									     1'd1 &&
									     routerAlloc$allocate[13],
									     1'd1 &&
									     routerAlloc$allocate[12] },
									   1'd1 &&
									   routerAlloc$allocate[11],
									   1'd1 &&
									   routerAlloc$allocate[10] }),
						    .outport_encoder(outport_encoder___d1474));
  module_outport_encoder instance_outport_encoder_3(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[19],
									     1'd1 &&
									     routerAlloc$allocate[18],
									     1'd1 &&
									     routerAlloc$allocate[17] },
									   1'd1 &&
									   routerAlloc$allocate[16],
									   1'd1 &&
									   routerAlloc$allocate[15] }),
						    .outport_encoder(outport_encoder___d1473));
  module_outport_encoder instance_outport_encoder_4(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[24],
									     1'd1 &&
									     routerAlloc$allocate[23],
									     1'd1 &&
									     routerAlloc$allocate[22] },
									   1'd1 &&
									   routerAlloc$allocate[21],
									   1'd1 &&
									   routerAlloc$allocate[20] }),
						    .outport_encoder(outport_encoder___d1472));
  assign IF_IF_outPortFIFOs_0_first__90_EQ_0_91_THEN_cr_ETC___d230 =
	     (CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 == 4'd0) ?
	       { flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d217,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d219,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d221,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d224,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d226 } :
	       { outPortFIFOs_0$first == 3'd4,
		 outPortFIFOs_0$first == 3'd3,
		 outPortFIFOs_0$first == 3'd2,
		 outPortFIFOs_0$first == 3'd1,
		 outPortFIFOs_0$first == 3'd0 } ;
  assign IF_IF_outPortFIFOs_1_first__46_EQ_0_47_THEN_cr_ETC___d186 =
	     (CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 == 4'd0) ?
	       { flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d173,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d175,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d177,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d180,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d182 } :
	       { outPortFIFOs_1$first == 3'd4,
		 outPortFIFOs_1$first == 3'd3,
		 outPortFIFOs_1$first == 3'd2,
		 outPortFIFOs_1$first == 3'd1,
		 outPortFIFOs_1$first == 3'd0 } ;
  assign IF_IF_outPortFIFOs_2_first__01_EQ_0_02_THEN_cr_ETC___d141 =
	     (CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 == 4'd0) ?
	       { flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d128,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d130,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d132,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d135,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d137 } :
	       { outPortFIFOs_2$first == 3'd4,
		 outPortFIFOs_2$first == 3'd3,
		 outPortFIFOs_2$first == 3'd2,
		 outPortFIFOs_2$first == 3'd1,
		 outPortFIFOs_2$first == 3'd0 } ;
  assign IF_IF_outPortFIFOs_3_first__7_EQ_0_8_THEN_cred_ETC___d97 =
	     (CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 == 4'd0) ?
	       { flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d84,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d86,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d88,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d91,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d93 } :
	       { outPortFIFOs_3$first == 3'd4,
		 outPortFIFOs_3$first == 3'd3,
		 outPortFIFOs_3$first == 3'd2,
		 outPortFIFOs_3$first == 3'd1,
		 outPortFIFOs_3$first == 3'd0 } ;
  assign IF_IF_outPortFIFOs_4_first_EQ_0_THEN_credits_0_ETC___d53 =
	     (CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 == 4'd0) ?
	       { flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d40,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d42,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d44,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d47,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d49 } :
	       { outPortFIFOs_4$first == 3'd4,
		 outPortFIFOs_4$first == 3'd3,
		 outPortFIFOs_4$first == 3'd2,
		 outPortFIFOs_4$first == 3'd1,
		 outPortFIFOs_4$first == 3'd0 } ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1539 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409 ?
	       hasFlitsToSend_perIn$wget[67:0] :
	       (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450 ?
		  hasFlitsToSend_perIn_1$wget[67:0] :
		  IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d876) ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1559 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409 ?
	       !outport_encoder___d1476[3] || !hasFlitsToSend_perIn$wget[68] :
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d824 ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d822 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452 ?
	       !outport_encoder___d1473[3] ||
	       !hasFlitsToSend_perIn_3$wget[68] :
	       outport_encoder___d1472[3] &&
	       outport_encoder___d1472[2:0] == 3'd0 &&
	       !hasFlitsToSend_perIn_4$wget[68] ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d823 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451 ?
	       !outport_encoder___d1474[3] ||
	       !hasFlitsToSend_perIn_2$wget[68] :
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d822 ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d824 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450 ?
	       !outport_encoder___d1475[3] ||
	       !hasFlitsToSend_perIn_1$wget[68] :
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d823 ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d840 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450 ?
	       !hasFlitsToSend_perIn_1$wget[64] :
	       (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451 ?
		  !hasFlitsToSend_perIn_2$wget[64] :
		  (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452 ?
		     !hasFlitsToSend_perIn_3$wget[64] :
		     !hasFlitsToSend_perIn_4$wget[64])) ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d848 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450 ?
	       hasFlitsToSend_perIn_1$wget[64] :
	       (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451 ?
		  hasFlitsToSend_perIn_2$wget[64] :
		  (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452 ?
		     hasFlitsToSend_perIn_3$wget[64] :
		     hasFlitsToSend_perIn_4$wget[64])) ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d858 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452 ?
	       outport_encoder___d1473[3] && hasFlitsToSend_perIn_3$wget[68] :
	       !outport_encoder___d1472[3] ||
	       outport_encoder___d1472[2:0] != 3'd0 ||
	       hasFlitsToSend_perIn_4$wget[68] ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d859 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451 ?
	       outport_encoder___d1474[3] && hasFlitsToSend_perIn_2$wget[68] :
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d858 ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d860 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450 ?
	       outport_encoder___d1475[3] && hasFlitsToSend_perIn_1$wget[68] :
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d859 ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d861 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409 ?
	       outport_encoder___d1476[3] && hasFlitsToSend_perIn$wget[68] :
	       IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d860 ;
  assign IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d876 =
	     IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451 ?
	       hasFlitsToSend_perIn_2$wget[67:0] :
	       (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452 ?
		  hasFlitsToSend_perIn_3$wget[67:0] :
		  hasFlitsToSend_perIn_4$wget[67:0]) ;
  assign IF_flitBuffers_1_notEmpty__44_BIT_0_45_THEN_IF_ETC___d187 =
	     flitBuffers_1$notEmpty[0] ?
	       IF_IF_outPortFIFOs_1_first__46_EQ_0_47_THEN_cr_ETC___d186 :
	       { flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d173,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d175,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d177,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d180,
		 flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d182 } ;
  assign IF_flitBuffers_2_notEmpty__9_BIT_0_00_THEN_IF__ETC___d142 =
	     flitBuffers_2$notEmpty[0] ?
	       IF_IF_outPortFIFOs_2_first__01_EQ_0_02_THEN_cr_ETC___d141 :
	       { flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d128,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d130,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d132,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d135,
		 flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d137 } ;
  assign IF_flitBuffers_3_notEmpty__5_BIT_0_6_THEN_IF_I_ETC___d98 =
	     flitBuffers_3$notEmpty[0] ?
	       IF_IF_outPortFIFOs_3_first__7_EQ_0_8_THEN_cred_ETC___d97 :
	       { flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d84,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d86,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d88,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d91,
		 flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d93 } ;
  assign IF_flitBuffers_4_notEmpty_BIT_0_THEN_IF_IF_out_ETC___d54 =
	     flitBuffers_4$notEmpty[0] ?
	       IF_IF_outPortFIFOs_4_first_EQ_0_THEN_credits_0_ETC___d53 :
	       { flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d40,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d42,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d44,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d47,
		 flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d49 } ;
  assign IF_flitBuffers_notEmpty__88_BIT_0_89_THEN_IF_I_ETC___d231 =
	     flitBuffers$notEmpty[0] ?
	       IF_IF_outPortFIFOs_0_first__90_EQ_0_91_THEN_cr_ETC___d230 :
	       { flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d217,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d219,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d221,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d224,
		 flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d226 } ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] != 3'd0 &&
	       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1485 :
	       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1485 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1450 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] != 3'd0 &&
	       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1488 :
	       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1488 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1451 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] != 3'd0 &&
	       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1490 :
	       IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1490 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1452 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] != 3'd0 &&
	       outport_encoder___d1473[3] &&
	       outport_encoder___d1473[2:0] == 3'd0 :
	       outport_encoder___d1473[3] &&
	       outport_encoder___d1473[2:0] == 3'd0 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1017 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	     CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1023 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	     CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1096 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	     CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1102 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	     CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1175 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	     CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1181 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	     CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] == 3'd0 ||
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1499 :
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1499 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] == 3'd1 ||
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1504 :
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1504 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] == 3'd2 ||
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1509 :
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1509 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] == 3'd3 ||
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1514 :
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1514 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 =
	     outport_encoder___d1472[3] ?
	       outport_encoder___d1472[2:0] == 3'd4 ||
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1519 :
	       IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1519 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d842 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	     (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409 ?
		!hasFlitsToSend_perIn$wget[64] :
		IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d840) ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d850 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	     (IF_outport_encoder_00_BIT_3_01_THEN_NOT_outpor_ETC___d1409 ?
		hasFlitsToSend_perIn$wget[64] :
		IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d848) ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d938 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	     CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11 ;
  assign IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d944 =
	     IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	     CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1230 =
	     outport_encoder___d1475[3] ?
	       ((outport_encoder___d1475[2:0] == 3'd1) ?
		  outport_encoder___d1475[2:0] :
		  3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1231 =
	     outport_encoder___d1475[3] ?
	       ((outport_encoder___d1475[2:0] == 3'd2) ? 3'd1 : 3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1232 =
	     outport_encoder___d1475[3] ?
	       ((outport_encoder___d1475[2:0] == 3'd3) ? 3'd1 : 3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1233 =
	     outport_encoder___d1475[3] ?
	       ((outport_encoder___d1475[2:0] == 3'd4) ? 3'd1 : 3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1316 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] != 3'd0 &&
	       (!outport_encoder___d1476[3] ||
		outport_encoder___d1476[2:0] != 3'd0) :
	       !outport_encoder___d1476[3] ||
	       outport_encoder___d1476[2:0] != 3'd0 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1326 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] != 3'd1 &&
	       (!outport_encoder___d1476[3] ||
		outport_encoder___d1476[2:0] != 3'd1) :
	       !outport_encoder___d1476[3] ||
	       outport_encoder___d1476[2:0] != 3'd1 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1334 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] != 3'd2 &&
	       (!outport_encoder___d1476[3] ||
		outport_encoder___d1476[2:0] != 3'd2) :
	       !outport_encoder___d1476[3] ||
	       outport_encoder___d1476[2:0] != 3'd2 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1342 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] != 3'd3 &&
	       (!outport_encoder___d1476[3] ||
		outport_encoder___d1476[2:0] != 3'd3) :
	       !outport_encoder___d1476[3] ||
	       outport_encoder___d1476[2:0] != 3'd3 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1350 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] != 3'd4 &&
	       (!outport_encoder___d1476[3] ||
		outport_encoder___d1476[2:0] != 3'd4) :
	       !outport_encoder___d1476[3] ||
	       outport_encoder___d1476[2:0] != 3'd4 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1497 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] == 3'd0 ||
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd0 :
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd0 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1502 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] == 3'd1 ||
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd1 :
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd1 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1507 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] == 3'd2 ||
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd2 :
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd2 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1512 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] == 3'd3 ||
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd3 :
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd3 ;
  assign IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1517 =
	     outport_encoder___d1475[3] ?
	       outport_encoder___d1475[2:0] == 3'd4 ||
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd4 :
	       outport_encoder___d1476[3] &&
	       outport_encoder___d1476[2:0] == 3'd4 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1226 =
	     outport_encoder___d1474[3] ?
	       ((outport_encoder___d1474[2:0] == 3'd1) ?
		  3'd2 :
		  IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1230) :
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1230 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1227 =
	     outport_encoder___d1474[3] ?
	       ((outport_encoder___d1474[2:0] == 3'd2) ?
		  outport_encoder___d1474[2:0] :
		  IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1231) :
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1231 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1228 =
	     outport_encoder___d1474[3] ?
	       ((outport_encoder___d1474[2:0] == 3'd3) ?
		  3'd2 :
		  IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1232) :
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1232 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1229 =
	     outport_encoder___d1474[3] ?
	       ((outport_encoder___d1474[2:0] == 3'd4) ?
		  3'd2 :
		  IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1233) :
	       IF_outport_encoder_07_BIT_3_08_THEN_IF_outport_ETC___d1233 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1313 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd0 &&
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1316 :
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1316 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1324 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd1 &&
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1326 :
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1326 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1332 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd2 &&
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1334 :
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1334 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1340 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd3 &&
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1342 :
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1342 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1348 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd4 &&
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1350 :
	       IF_outport_encoder_07_BIT_3_08_THEN_NOT_outpor_ETC___d1350 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1484 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd0 &&
	       (!outport_encoder___d1475[3] ||
		outport_encoder___d1475[2:0] != 3'd0) :
	       !outport_encoder___d1475[3] ||
	       outport_encoder___d1475[2:0] != 3'd0 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1487 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] != 3'd0 &&
	       outport_encoder___d1475[3] &&
	       outport_encoder___d1475[2:0] == 3'd0 :
	       outport_encoder___d1475[3] &&
	       outport_encoder___d1475[2:0] == 3'd0 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1498 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] == 3'd0 ||
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1497 :
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1497 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1503 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] == 3'd1 ||
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1502 :
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1502 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1508 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] == 3'd2 ||
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1507 :
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1507 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1513 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] == 3'd3 ||
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1512 :
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1512 ;
  assign IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1518 =
	     outport_encoder___d1474[3] ?
	       outport_encoder___d1474[2:0] == 3'd4 ||
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1517 :
	       IF_outport_encoder_07_BIT_3_08_THEN_outport_en_ETC___d1517 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1222 =
	     outport_encoder___d1473[3] ?
	       ((outport_encoder___d1473[2:0] == 3'd1) ?
		  3'd3 :
		  IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1226) :
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1226 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1223 =
	     outport_encoder___d1473[3] ?
	       ((outport_encoder___d1473[2:0] == 3'd2) ?
		  3'd3 :
		  IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1227) :
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1227 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1224 =
	     outport_encoder___d1473[3] ?
	       ((outport_encoder___d1473[2:0] == 3'd3) ?
		  outport_encoder___d1473[2:0] :
		  IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1228) :
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1228 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1225 =
	     outport_encoder___d1473[3] ?
	       ((outport_encoder___d1473[2:0] == 3'd4) ?
		  3'd3 :
		  IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1229) :
	       IF_outport_encoder_38_BIT_3_39_THEN_IF_outport_ETC___d1229 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1465 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd0 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1313 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1313 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1466 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd1 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1324 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1324 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1467 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd2 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1332 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1332 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1468 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd3 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1340 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1340 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1469 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd4 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1348 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1348 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1485 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd0 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1484 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1484 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1488 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd0 &&
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1487 :
	       IF_outport_encoder_38_BIT_3_39_THEN_NOT_outpor_ETC___d1487 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1490 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] != 3'd0 &&
	       outport_encoder___d1474[3] &&
	       outport_encoder___d1474[2:0] == 3'd0 :
	       outport_encoder___d1474[3] &&
	       outport_encoder___d1474[2:0] == 3'd0 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1499 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] == 3'd0 ||
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1498 :
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1498 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1504 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] == 3'd1 ||
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1503 :
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1503 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1509 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] == 3'd2 ||
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1508 :
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1508 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1514 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] == 3'd3 ||
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1513 :
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1513 ;
  assign IF_outport_encoder_69_BIT_3_70_THEN_outport_en_ETC___d1519 =
	     outport_encoder___d1473[3] ?
	       outport_encoder___d1473[2:0] == 3'd4 ||
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1518 :
	       IF_outport_encoder_38_BIT_3_39_THEN_outport_en_ETC___d1518 ;
  assign NOT_IF_outPortFIFOs_0_first__90_EQ_0_91_THEN_c_ETC___d652 =
	     CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 != 4'd0 ||
	     flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d1526 ;
  assign NOT_IF_outPortFIFOs_1_first__46_EQ_0_47_THEN_c_ETC___d670 =
	     CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 != 4'd0 ||
	     flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d1527 ;
  assign NOT_IF_outPortFIFOs_2_first__01_EQ_0_02_THEN_c_ETC___d688 =
	     CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 != 4'd0 ||
	     flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d1528 ;
  assign NOT_IF_outPortFIFOs_3_first__7_EQ_0_8_THEN_cre_ETC___d706 =
	     CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 != 4'd0 ||
	     flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d1529 ;
  assign NOT_IF_outPortFIFOs_4_first_EQ_0_THEN_credits__ETC___d724 =
	     CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 != 4'd0 ||
	     flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d1530 ;
  assign active_in__h58594 =
	     outport_encoder___d1472[3] ?
	       ((outport_encoder___d1472[2:0] == 3'd1) ?
		  3'd4 :
		  IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1222) :
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1222 ;
  assign active_in__h60337 =
	     outport_encoder___d1472[3] ?
	       ((outport_encoder___d1472[2:0] == 3'd2) ?
		  3'd4 :
		  IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1223) :
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1223 ;
  assign active_in__h62080 =
	     outport_encoder___d1472[3] ?
	       ((outport_encoder___d1472[2:0] == 3'd3) ?
		  3'd4 :
		  IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1224) :
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1224 ;
  assign active_in__h63823 =
	     outport_encoder___d1472[3] ?
	       ((outport_encoder___d1472[2:0] == 3'd4) ?
		  outport_encoder___d1472[2:0] :
		  IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1225) :
	       IF_outport_encoder_69_BIT_3_70_THEN_IF_outport_ETC___d1225 ;
  assign credits_0_1_read__3_PLUS_1___d1235 = credits_0_1 + 4'd1 ;
  assign credits_0_read_PLUS_1___d1234 = credits_0 + 4'd1 ;
  assign credits_1_1_read__5_PLUS_1___d1237 = credits_1_1 + 4'd1 ;
  assign credits_1_read_PLUS_1___d1236 = credits_1 + 4'd1 ;
  assign credits_2_1_read__7_PLUS_1___d1239 = credits_2_1 + 4'd1 ;
  assign credits_2_read_PLUS_1___d1238 = credits_2 + 4'd1 ;
  assign credits_3_1_read__9_PLUS_1___d1241 = credits_3_1 + 4'd1 ;
  assign credits_3_read__1_PLUS_1___d1240 = credits_3 + 4'd1 ;
  assign credits_4_1_read__1_PLUS_1___d1243 = credits_4_1 + 4'd1 ;
  assign credits_4_read__3_PLUS_1___d1242 = credits_4 + 4'd1 ;
  assign fifo_out__h38368 =
	     !flitBuffers$notEmpty[0] ||
	     CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 == 4'd0 ;
  assign fifo_out__h39552 =
	     !flitBuffers_1$notEmpty[0] ||
	     CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 == 4'd0 ;
  assign fifo_out__h40097 =
	     !flitBuffers_2$notEmpty[0] ||
	     CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 == 4'd0 ;
  assign fifo_out__h40642 =
	     !flitBuffers_3$notEmpty[0] ||
	     CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 == 4'd0 ;
  assign fifo_out__h41187 =
	     !flitBuffers_4$notEmpty[0] ||
	     CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 == 4'd0 ;
  assign flitBuffers_1_notEmpty__44_BIT_0_45_AND_NOT_IF_ETC___d318 =
	     flitBuffers_1$notEmpty[0] &&
	     CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 != 4'd0 ;
  assign flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d1527 =
	     flitBuffers_1$notEmpty[1] &&
	     CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 != 4'd0 ;
  assign flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d173 =
	     flitBuffers_1$notEmpty[1] &&
	     CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 != 4'd0 &&
	     outPortFIFOs_1_1$first == 3'd4 ;
  assign flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d175 =
	     flitBuffers_1$notEmpty[1] &&
	     CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 != 4'd0 &&
	     outPortFIFOs_1_1$first == 3'd3 ;
  assign flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d177 =
	     flitBuffers_1$notEmpty[1] &&
	     CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 != 4'd0 &&
	     outPortFIFOs_1_1$first == 3'd2 ;
  assign flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d180 =
	     flitBuffers_1$notEmpty[1] &&
	     CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 != 4'd0 &&
	     outPortFIFOs_1_1$first == 3'd1 ;
  assign flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d182 =
	     flitBuffers_1$notEmpty[1] &&
	     CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 != 4'd0 &&
	     outPortFIFOs_1_1$first == 3'd0 ;
  assign flitBuffers_2_notEmpty__9_BIT_0_00_AND_NOT_IF__ETC___d349 =
	     flitBuffers_2$notEmpty[0] &&
	     CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 != 4'd0 ;
  assign flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d128 =
	     flitBuffers_2$notEmpty[1] &&
	     CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 != 4'd0 &&
	     outPortFIFOs_2_1$first == 3'd4 ;
  assign flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d130 =
	     flitBuffers_2$notEmpty[1] &&
	     CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 != 4'd0 &&
	     outPortFIFOs_2_1$first == 3'd3 ;
  assign flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d132 =
	     flitBuffers_2$notEmpty[1] &&
	     CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 != 4'd0 &&
	     outPortFIFOs_2_1$first == 3'd2 ;
  assign flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d135 =
	     flitBuffers_2$notEmpty[1] &&
	     CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 != 4'd0 &&
	     outPortFIFOs_2_1$first == 3'd1 ;
  assign flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d137 =
	     flitBuffers_2$notEmpty[1] &&
	     CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 != 4'd0 &&
	     outPortFIFOs_2_1$first == 3'd0 ;
  assign flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d1528 =
	     flitBuffers_2$notEmpty[1] &&
	     CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 != 4'd0 ;
  assign flitBuffers_3_notEmpty__5_BIT_0_6_AND_NOT_IF_o_ETC___d380 =
	     flitBuffers_3$notEmpty[0] &&
	     CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 != 4'd0 ;
  assign flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d1529 =
	     flitBuffers_3$notEmpty[1] &&
	     CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 != 4'd0 ;
  assign flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d84 =
	     flitBuffers_3$notEmpty[1] &&
	     CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 != 4'd0 &&
	     outPortFIFOs_3_1$first == 3'd4 ;
  assign flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d86 =
	     flitBuffers_3$notEmpty[1] &&
	     CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 != 4'd0 &&
	     outPortFIFOs_3_1$first == 3'd3 ;
  assign flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d88 =
	     flitBuffers_3$notEmpty[1] &&
	     CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 != 4'd0 &&
	     outPortFIFOs_3_1$first == 3'd2 ;
  assign flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d91 =
	     flitBuffers_3$notEmpty[1] &&
	     CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 != 4'd0 &&
	     outPortFIFOs_3_1$first == 3'd1 ;
  assign flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d93 =
	     flitBuffers_3$notEmpty[1] &&
	     CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 != 4'd0 &&
	     outPortFIFOs_3_1$first == 3'd0 ;
  assign flitBuffers_4_notEmpty_BIT_0_AND_NOT_IF_outPor_ETC___d411 =
	     flitBuffers_4$notEmpty[0] &&
	     CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 != 4'd0 ;
  assign flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d1530 =
	     flitBuffers_4$notEmpty[1] &&
	     CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 != 4'd0 ;
  assign flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d40 =
	     flitBuffers_4$notEmpty[1] &&
	     CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 != 4'd0 &&
	     outPortFIFOs_4_1$first == 3'd4 ;
  assign flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d42 =
	     flitBuffers_4$notEmpty[1] &&
	     CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 != 4'd0 &&
	     outPortFIFOs_4_1$first == 3'd3 ;
  assign flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d44 =
	     flitBuffers_4$notEmpty[1] &&
	     CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 != 4'd0 &&
	     outPortFIFOs_4_1$first == 3'd2 ;
  assign flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d47 =
	     flitBuffers_4$notEmpty[1] &&
	     CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 != 4'd0 &&
	     outPortFIFOs_4_1$first == 3'd1 ;
  assign flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d49 =
	     flitBuffers_4$notEmpty[1] &&
	     CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 != 4'd0 &&
	     outPortFIFOs_4_1$first == 3'd0 ;
  assign flitBuffers_notEmpty__88_BIT_0_89_AND_NOT_IF_o_ETC___d287 =
	     flitBuffers$notEmpty[0] &&
	     CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 != 4'd0 ;
  assign flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d1526 =
	     flitBuffers$notEmpty[1] &&
	     CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 != 4'd0 ;
  assign flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d217 =
	     flitBuffers$notEmpty[1] &&
	     CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 != 4'd0 &&
	     outPortFIFOs_0_1$first == 3'd4 ;
  assign flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d219 =
	     flitBuffers$notEmpty[1] &&
	     CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 != 4'd0 &&
	     outPortFIFOs_0_1$first == 3'd3 ;
  assign flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d221 =
	     flitBuffers$notEmpty[1] &&
	     CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 != 4'd0 &&
	     outPortFIFOs_0_1$first == 3'd2 ;
  assign flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d224 =
	     flitBuffers$notEmpty[1] &&
	     CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 != 4'd0 &&
	     outPortFIFOs_0_1$first == 3'd1 ;
  assign flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d226 =
	     flitBuffers$notEmpty[1] &&
	     CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 != 4'd0 &&
	     outPortFIFOs_0_1$first == 3'd0 ;
  assign outport_encoder_00_BIT_3_01_AND_IF_flitBuffers_ETC___d726 =
	     outport_encoder___d1472[3] &&
	     (flitBuffers_4$notEmpty[0] ?
		NOT_IF_outPortFIFOs_4_first_EQ_0_THEN_credits__ETC___d724 :
		flitBuffers_4_notEmpty_BIT_1_0_AND_NOT_IF_outP_ETC___d1530) ;
  assign outport_encoder_07_BIT_3_08_AND_IF_flitBuffers_ETC___d672 =
	     outport_encoder___d1475[3] &&
	     (flitBuffers_1$notEmpty[0] ?
		NOT_IF_outPortFIFOs_1_first__46_EQ_0_47_THEN_c_ETC___d670 :
		flitBuffers_1_notEmpty__44_BIT_1_58_AND_NOT_IF_ETC___d1527) ;
  assign outport_encoder_38_BIT_3_39_AND_IF_flitBuffers_ETC___d690 =
	     outport_encoder___d1474[3] &&
	     (flitBuffers_2$notEmpty[0] ?
		NOT_IF_outPortFIFOs_2_first__01_EQ_0_02_THEN_c_ETC___d688 :
		flitBuffers_2_notEmpty__9_BIT_1_13_AND_NOT_IF__ETC___d1528) ;
  assign outport_encoder_69_BIT_3_70_AND_IF_flitBuffers_ETC___d708 =
	     outport_encoder___d1473[3] &&
	     (flitBuffers_3$notEmpty[0] ?
		NOT_IF_outPortFIFOs_3_first__7_EQ_0_8_THEN_cre_ETC___d706 :
		flitBuffers_3_notEmpty__5_BIT_1_9_AND_NOT_IF_o_ETC___d1529) ;
  assign outport_encoder_76_BIT_3_77_AND_IF_flitBuffers_ETC___d654 =
	     outport_encoder___d1476[3] &&
	     (flitBuffers$notEmpty[0] ?
		NOT_IF_outPortFIFOs_0_first__90_EQ_0_91_THEN_c_ETC___d652 :
		flitBuffers_notEmpty__88_BIT_1_02_AND_NOT_IF_o_ETC___d1526) ;
  assign x__h42741 = credits_0 - 4'd1 ;
  assign x__h43471 = credits_0_1 - 4'd1 ;
  assign x__h44414 = credits_1 - 4'd1 ;
  assign x__h45144 = credits_1_1 - 4'd1 ;
  assign x__h46087 = credits_2 - 4'd1 ;
  assign x__h46817 = credits_2_1 - 4'd1 ;
  assign x__h47760 = credits_3 - 4'd1 ;
  assign x__h48490 = credits_3_1 - 4'd1 ;
  assign x__h49433 = credits_4 - 4'd1 ;
  assign x__h50163 = credits_4_1 - 4'd1 ;
  always@(outPortFIFOs_0$first or
	  credits_4 or credits_0 or credits_1 or credits_2 or credits_3)
  begin
    case (outPortFIFOs_0$first)
      3'd0: CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 = credits_0;
      3'd1: CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 = credits_1;
      3'd2: CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 = credits_2;
      3'd3: CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 = credits_3;
      default: CASE_outPortFIFOs_0first_credits_4_0_credits__ETC__q1 =
		   credits_4;
    endcase
  end
  always@(outPortFIFOs_1$first or
	  credits_4 or credits_0 or credits_1 or credits_2 or credits_3)
  begin
    case (outPortFIFOs_1$first)
      3'd0: CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 = credits_0;
      3'd1: CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 = credits_1;
      3'd2: CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 = credits_2;
      3'd3: CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 = credits_3;
      default: CASE_outPortFIFOs_1first_credits_4_0_credits__ETC__q2 =
		   credits_4;
    endcase
  end
  always@(outPortFIFOs_2$first or
	  credits_4 or credits_0 or credits_1 or credits_2 or credits_3)
  begin
    case (outPortFIFOs_2$first)
      3'd0: CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 = credits_0;
      3'd1: CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 = credits_1;
      3'd2: CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 = credits_2;
      3'd3: CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 = credits_3;
      default: CASE_outPortFIFOs_2first_credits_4_0_credits__ETC__q3 =
		   credits_4;
    endcase
  end
  always@(outPortFIFOs_3$first or
	  credits_4 or credits_0 or credits_1 or credits_2 or credits_3)
  begin
    case (outPortFIFOs_3$first)
      3'd0: CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 = credits_0;
      3'd1: CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 = credits_1;
      3'd2: CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 = credits_2;
      3'd3: CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 = credits_3;
      default: CASE_outPortFIFOs_3first_credits_4_0_credits__ETC__q4 =
		   credits_4;
    endcase
  end
  always@(outPortFIFOs_4$first or
	  credits_4 or credits_0 or credits_1 or credits_2 or credits_3)
  begin
    case (outPortFIFOs_4$first)
      3'd0: CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 = credits_0;
      3'd1: CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 = credits_1;
      3'd2: CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 = credits_2;
      3'd3: CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 = credits_3;
      default: CASE_outPortFIFOs_4first_credits_4_0_credits__ETC__q5 =
		   credits_4;
    endcase
  end
  always@(outPortFIFOs_4_1$first or
	  credits_4_1 or
	  credits_0_1 or credits_1_1 or credits_2_1 or credits_3_1)
  begin
    case (outPortFIFOs_4_1$first)
      3'd0:
	  CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 = credits_0_1;
      3'd1:
	  CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 = credits_1_1;
      3'd2:
	  CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 = credits_2_1;
      3'd3:
	  CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 = credits_3_1;
      default: CASE_outPortFIFOs_4_1first_credits_4_1_0_cred_ETC__q6 =
		   credits_4_1;
    endcase
  end
  always@(outPortFIFOs_3_1$first or
	  credits_4_1 or
	  credits_0_1 or credits_1_1 or credits_2_1 or credits_3_1)
  begin
    case (outPortFIFOs_3_1$first)
      3'd0:
	  CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 = credits_0_1;
      3'd1:
	  CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 = credits_1_1;
      3'd2:
	  CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 = credits_2_1;
      3'd3:
	  CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 = credits_3_1;
      default: CASE_outPortFIFOs_3_1first_credits_4_1_0_cred_ETC__q7 =
		   credits_4_1;
    endcase
  end
  always@(outPortFIFOs_2_1$first or
	  credits_4_1 or
	  credits_0_1 or credits_1_1 or credits_2_1 or credits_3_1)
  begin
    case (outPortFIFOs_2_1$first)
      3'd0:
	  CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 = credits_0_1;
      3'd1:
	  CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 = credits_1_1;
      3'd2:
	  CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 = credits_2_1;
      3'd3:
	  CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 = credits_3_1;
      default: CASE_outPortFIFOs_2_1first_credits_4_1_0_cred_ETC__q8 =
		   credits_4_1;
    endcase
  end
  always@(outPortFIFOs_1_1$first or
	  credits_4_1 or
	  credits_0_1 or credits_1_1 or credits_2_1 or credits_3_1)
  begin
    case (outPortFIFOs_1_1$first)
      3'd0:
	  CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 = credits_0_1;
      3'd1:
	  CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 = credits_1_1;
      3'd2:
	  CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 = credits_2_1;
      3'd3:
	  CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 = credits_3_1;
      default: CASE_outPortFIFOs_1_1first_credits_4_1_0_cred_ETC__q9 =
		   credits_4_1;
    endcase
  end
  always@(outPortFIFOs_0_1$first or
	  credits_4_1 or
	  credits_0_1 or credits_1_1 or credits_2_1 or credits_3_1)
  begin
    case (outPortFIFOs_0_1$first)
      3'd0:
	  CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 =
	      credits_0_1;
      3'd1:
	  CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 =
	      credits_1_1;
      3'd2:
	  CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 =
	      credits_2_1;
      3'd3:
	  CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 =
	      credits_3_1;
      default: CASE_outPortFIFOs_0_1first_credits_4_1_0_cred_ETC__q10 =
		   credits_4_1;
    endcase
  end
  always@(active_in__h58594 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h58594)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950 =
	      outport_encoder___d1476[3] && hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950 =
	      outport_encoder___d1475[3] && hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950 =
	      outport_encoder___d1474[3] && hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950 =
	      outport_encoder___d1473[3] && hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d950 =
		   active_in__h58594 != 3'd4 ||
		   outport_encoder___d1472[3] &&
		   hasFlitsToSend_perIn_4$wget[68];
    endcase
  end
  always@(active_in__h60337 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h60337)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029 =
	      outport_encoder___d1476[3] && hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029 =
	      outport_encoder___d1475[3] && hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029 =
	      outport_encoder___d1474[3] && hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029 =
	      outport_encoder___d1473[3] && hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1029 =
		   active_in__h60337 != 3'd4 ||
		   outport_encoder___d1472[3] &&
		   hasFlitsToSend_perIn_4$wget[68];
    endcase
  end
  always@(active_in__h62080 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h62080)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108 =
	      outport_encoder___d1476[3] && hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108 =
	      outport_encoder___d1475[3] && hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108 =
	      outport_encoder___d1474[3] && hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108 =
	      outport_encoder___d1473[3] && hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1108 =
		   active_in__h62080 != 3'd4 ||
		   outport_encoder___d1472[3] &&
		   hasFlitsToSend_perIn_4$wget[68];
    endcase
  end
  always@(active_in__h63823 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h63823)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187 =
	      outport_encoder___d1476[3] && hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187 =
	      outport_encoder___d1475[3] && hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187 =
	      outport_encoder___d1474[3] && hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187 =
	      outport_encoder___d1473[3] && hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1187 =
		   active_in__h63823 != 3'd4 ||
		   outport_encoder___d1472[3] &&
		   hasFlitsToSend_perIn_4$wget[68];
    endcase
  end
  always@(active_in__h58594 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h58594)
      3'd0:
	  CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11 =
	      !hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11 =
	      !hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11 =
	      !hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11 =
	      !hasFlitsToSend_perIn_3$wget[64];
      default: CASE_active_in8594_NOT_hasFlitsToSend_perIn_4_ETC__q11 =
		   !hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h58594 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h58594)
      3'd0:
	  CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 =
	      hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 =
	      hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 =
	      hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 =
	      hasFlitsToSend_perIn_3$wget[64];
      3'd4:
	  CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 =
	      hasFlitsToSend_perIn_4$wget[64];
      default: CASE_active_in8594_hasFlitsToSend_perIn_4wget_ETC__q12 =
		   hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h60337 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h60337)
      3'd0:
	  CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13 =
	      !hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13 =
	      !hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13 =
	      !hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13 =
	      !hasFlitsToSend_perIn_3$wget[64];
      default: CASE_active_in0337_NOT_hasFlitsToSend_perIn_4_ETC__q13 =
		   !hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h60337 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h60337)
      3'd0:
	  CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 =
	      hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 =
	      hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 =
	      hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 =
	      hasFlitsToSend_perIn_3$wget[64];
      3'd4:
	  CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 =
	      hasFlitsToSend_perIn_4$wget[64];
      default: CASE_active_in0337_hasFlitsToSend_perIn_4wget_ETC__q14 =
		   hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h62080 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h62080)
      3'd0:
	  CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15 =
	      !hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15 =
	      !hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15 =
	      !hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15 =
	      !hasFlitsToSend_perIn_3$wget[64];
      default: CASE_active_in2080_NOT_hasFlitsToSend_perIn_4_ETC__q15 =
		   !hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h62080 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h62080)
      3'd0:
	  CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 =
	      hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 =
	      hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 =
	      hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 =
	      hasFlitsToSend_perIn_3$wget[64];
      3'd4:
	  CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 =
	      hasFlitsToSend_perIn_4$wget[64];
      default: CASE_active_in2080_hasFlitsToSend_perIn_4wget_ETC__q16 =
		   hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h63823 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h63823)
      3'd0:
	  CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17 =
	      !hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17 =
	      !hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17 =
	      !hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17 =
	      !hasFlitsToSend_perIn_3$wget[64];
      default: CASE_active_in3823_NOT_hasFlitsToSend_perIn_4_ETC__q17 =
		   !hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h63823 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h63823)
      3'd0:
	  CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 =
	      hasFlitsToSend_perIn$wget[64];
      3'd1:
	  CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 =
	      hasFlitsToSend_perIn_1$wget[64];
      3'd2:
	  CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 =
	      hasFlitsToSend_perIn_2$wget[64];
      3'd3:
	  CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 =
	      hasFlitsToSend_perIn_3$wget[64];
      3'd4:
	  CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 =
	      hasFlitsToSend_perIn_4$wget[64];
      default: CASE_active_in3823_hasFlitsToSend_perIn_4wget_ETC__q18 =
		   hasFlitsToSend_perIn_4$wget[64];
    endcase
  end
  always@(active_in__h58594 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h58594)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562 =
	      !outport_encoder___d1476[3] || !hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562 =
	      !outport_encoder___d1475[3] || !hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562 =
	      !outport_encoder___d1474[3] || !hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562 =
	      !outport_encoder___d1473[3] || !hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562 =
		   active_in__h58594 == 3'd4 &&
		   (!outport_encoder___d1472[3] ||
		    !hasFlitsToSend_perIn_4$wget[68]);
    endcase
  end
  always@(active_in__h60337 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h60337)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565 =
	      !outport_encoder___d1476[3] || !hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565 =
	      !outport_encoder___d1475[3] || !hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565 =
	      !outport_encoder___d1474[3] || !hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565 =
	      !outport_encoder___d1473[3] || !hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565 =
		   active_in__h60337 == 3'd4 &&
		   (!outport_encoder___d1472[3] ||
		    !hasFlitsToSend_perIn_4$wget[68]);
    endcase
  end
  always@(active_in__h62080 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h62080)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568 =
	      !outport_encoder___d1476[3] || !hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568 =
	      !outport_encoder___d1475[3] || !hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568 =
	      !outport_encoder___d1474[3] || !hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568 =
	      !outport_encoder___d1473[3] || !hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568 =
		   active_in__h62080 == 3'd4 &&
		   (!outport_encoder___d1472[3] ||
		    !hasFlitsToSend_perIn_4$wget[68]);
    endcase
  end
  always@(active_in__h63823 or
	  outport_encoder___d1472 or
	  hasFlitsToSend_perIn_4$wget or
	  outport_encoder___d1476 or
	  hasFlitsToSend_perIn$wget or
	  outport_encoder___d1475 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d1474 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d1473 or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h63823)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571 =
	      !outport_encoder___d1476[3] || !hasFlitsToSend_perIn$wget[68];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571 =
	      !outport_encoder___d1475[3] || !hasFlitsToSend_perIn_1$wget[68];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571 =
	      !outport_encoder___d1474[3] || !hasFlitsToSend_perIn_2$wget[68];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571 =
	      !outport_encoder___d1473[3] || !hasFlitsToSend_perIn_3$wget[68];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571 =
		   active_in__h63823 == 3'd4 &&
		   (!outport_encoder___d1472[3] ||
		    !hasFlitsToSend_perIn_4$wget[68]);
    endcase
  end
  always@(active_in__h58594 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h58594)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 =
	      hasFlitsToSend_perIn$wget[67:0];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 =
	      hasFlitsToSend_perIn_1$wget[67:0];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 =
	      hasFlitsToSend_perIn_2$wget[67:0];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 =
	      hasFlitsToSend_perIn_3$wget[67:0];
      3'd4:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 =
	      hasFlitsToSend_perIn_4$wget[67:0];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1540 =
		   hasFlitsToSend_perIn_4$wget[67:0];
    endcase
  end
  always@(active_in__h60337 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h60337)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 =
	      hasFlitsToSend_perIn$wget[67:0];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 =
	      hasFlitsToSend_perIn_1$wget[67:0];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 =
	      hasFlitsToSend_perIn_2$wget[67:0];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 =
	      hasFlitsToSend_perIn_3$wget[67:0];
      3'd4:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 =
	      hasFlitsToSend_perIn_4$wget[67:0];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1541 =
		   hasFlitsToSend_perIn_4$wget[67:0];
    endcase
  end
  always@(active_in__h62080 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h62080)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 =
	      hasFlitsToSend_perIn$wget[67:0];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 =
	      hasFlitsToSend_perIn_1$wget[67:0];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 =
	      hasFlitsToSend_perIn_2$wget[67:0];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 =
	      hasFlitsToSend_perIn_3$wget[67:0];
      3'd4:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 =
	      hasFlitsToSend_perIn_4$wget[67:0];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1542 =
		   hasFlitsToSend_perIn_4$wget[67:0];
    endcase
  end
  always@(active_in__h63823 or
	  hasFlitsToSend_perIn_4$wget or
	  hasFlitsToSend_perIn$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or hasFlitsToSend_perIn_3$wget)
  begin
    case (active_in__h63823)
      3'd0:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 =
	      hasFlitsToSend_perIn$wget[67:0];
      3'd1:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 =
	      hasFlitsToSend_perIn_1$wget[67:0];
      3'd2:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 =
	      hasFlitsToSend_perIn_2$wget[67:0];
      3'd3:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 =
	      hasFlitsToSend_perIn_3$wget[67:0];
      3'd4:
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 =
	      hasFlitsToSend_perIn_4$wget[67:0];
      default: IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1543 =
		   hasFlitsToSend_perIn_4$wget[67:0];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (!RST_N)
      begin
        activeVC_perIn_reg <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_1 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_2 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_3 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_4 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	credits_0 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_0_1 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_1 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_1_1 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_2 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_2_1 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_3 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_3_1 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_4 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	credits_4_1 <= `BSV_ASSIGNMENT_DELAY 4'd8;
	inPortVL_0 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_0_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_1_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_2 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_2_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_3 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_3_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_4 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_4_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	lockedVL_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_0_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_1_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_2_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_3_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_4_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (activeVC_perIn_reg$EN)
	  activeVC_perIn_reg <= `BSV_ASSIGNMENT_DELAY activeVC_perIn_reg$D_IN;
	if (activeVC_perIn_reg_1$EN)
	  activeVC_perIn_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_1$D_IN;
	if (activeVC_perIn_reg_2$EN)
	  activeVC_perIn_reg_2 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_2$D_IN;
	if (activeVC_perIn_reg_3$EN)
	  activeVC_perIn_reg_3 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_3$D_IN;
	if (activeVC_perIn_reg_4$EN)
	  activeVC_perIn_reg_4 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_4$D_IN;
	if (credits_0$EN) credits_0 <= `BSV_ASSIGNMENT_DELAY credits_0$D_IN;
	if (credits_0_1$EN)
	  credits_0_1 <= `BSV_ASSIGNMENT_DELAY credits_0_1$D_IN;
	if (credits_1$EN) credits_1 <= `BSV_ASSIGNMENT_DELAY credits_1$D_IN;
	if (credits_1_1$EN)
	  credits_1_1 <= `BSV_ASSIGNMENT_DELAY credits_1_1$D_IN;
	if (credits_2$EN) credits_2 <= `BSV_ASSIGNMENT_DELAY credits_2$D_IN;
	if (credits_2_1$EN)
	  credits_2_1 <= `BSV_ASSIGNMENT_DELAY credits_2_1$D_IN;
	if (credits_3$EN) credits_3 <= `BSV_ASSIGNMENT_DELAY credits_3$D_IN;
	if (credits_3_1$EN)
	  credits_3_1 <= `BSV_ASSIGNMENT_DELAY credits_3_1$D_IN;
	if (credits_4$EN) credits_4 <= `BSV_ASSIGNMENT_DELAY credits_4$D_IN;
	if (credits_4_1$EN)
	  credits_4_1 <= `BSV_ASSIGNMENT_DELAY credits_4_1$D_IN;
	if (inPortVL_0$EN)
	  inPortVL_0 <= `BSV_ASSIGNMENT_DELAY inPortVL_0$D_IN;
	if (inPortVL_0_1$EN)
	  inPortVL_0_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_0_1$D_IN;
	if (inPortVL_1$EN)
	  inPortVL_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_1$D_IN;
	if (inPortVL_1_1$EN)
	  inPortVL_1_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_1_1$D_IN;
	if (inPortVL_2$EN)
	  inPortVL_2 <= `BSV_ASSIGNMENT_DELAY inPortVL_2$D_IN;
	if (inPortVL_2_1$EN)
	  inPortVL_2_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_2_1$D_IN;
	if (inPortVL_3$EN)
	  inPortVL_3 <= `BSV_ASSIGNMENT_DELAY inPortVL_3$D_IN;
	if (inPortVL_3_1$EN)
	  inPortVL_3_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_3_1$D_IN;
	if (inPortVL_4$EN)
	  inPortVL_4 <= `BSV_ASSIGNMENT_DELAY inPortVL_4$D_IN;
	if (inPortVL_4_1$EN)
	  inPortVL_4_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_4_1$D_IN;
	if (lockedVL_0$EN)
	  lockedVL_0 <= `BSV_ASSIGNMENT_DELAY lockedVL_0$D_IN;
	if (lockedVL_0_1$EN)
	  lockedVL_0_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_0_1$D_IN;
	if (lockedVL_1$EN)
	  lockedVL_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_1$D_IN;
	if (lockedVL_1_1$EN)
	  lockedVL_1_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_1_1$D_IN;
	if (lockedVL_2$EN)
	  lockedVL_2 <= `BSV_ASSIGNMENT_DELAY lockedVL_2$D_IN;
	if (lockedVL_2_1$EN)
	  lockedVL_2_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_2_1$D_IN;
	if (lockedVL_3$EN)
	  lockedVL_3 <= `BSV_ASSIGNMENT_DELAY lockedVL_3$D_IN;
	if (lockedVL_3_1$EN)
	  lockedVL_3_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_3_1$D_IN;
	if (lockedVL_4$EN)
	  lockedVL_4 <= `BSV_ASSIGNMENT_DELAY lockedVL_4$D_IN;
	if (lockedVL_4_1$EN)
	  lockedVL_4_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_4_1$D_IN;
	if (selectedIO_reg_0$EN)
	  selectedIO_reg_0 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0$D_IN;
	if (selectedIO_reg_0_1$EN)
	  selectedIO_reg_0_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_1$D_IN;
	if (selectedIO_reg_0_2$EN)
	  selectedIO_reg_0_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_2$D_IN;
	if (selectedIO_reg_0_3$EN)
	  selectedIO_reg_0_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_3$D_IN;
	if (selectedIO_reg_0_4$EN)
	  selectedIO_reg_0_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_4$D_IN;
	if (selectedIO_reg_1$EN)
	  selectedIO_reg_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1$D_IN;
	if (selectedIO_reg_1_1$EN)
	  selectedIO_reg_1_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_1$D_IN;
	if (selectedIO_reg_1_2$EN)
	  selectedIO_reg_1_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_2$D_IN;
	if (selectedIO_reg_1_3$EN)
	  selectedIO_reg_1_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_3$D_IN;
	if (selectedIO_reg_1_4$EN)
	  selectedIO_reg_1_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_4$D_IN;
	if (selectedIO_reg_2$EN)
	  selectedIO_reg_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2$D_IN;
	if (selectedIO_reg_2_1$EN)
	  selectedIO_reg_2_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_1$D_IN;
	if (selectedIO_reg_2_2$EN)
	  selectedIO_reg_2_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_2$D_IN;
	if (selectedIO_reg_2_3$EN)
	  selectedIO_reg_2_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_3$D_IN;
	if (selectedIO_reg_2_4$EN)
	  selectedIO_reg_2_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_4$D_IN;
	if (selectedIO_reg_3$EN)
	  selectedIO_reg_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3$D_IN;
	if (selectedIO_reg_3_1$EN)
	  selectedIO_reg_3_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_1$D_IN;
	if (selectedIO_reg_3_2$EN)
	  selectedIO_reg_3_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_2$D_IN;
	if (selectedIO_reg_3_3$EN)
	  selectedIO_reg_3_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_3$D_IN;
	if (selectedIO_reg_3_4$EN)
	  selectedIO_reg_3_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_4$D_IN;
	if (selectedIO_reg_4$EN)
	  selectedIO_reg_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4$D_IN;
	if (selectedIO_reg_4_1$EN)
	  selectedIO_reg_4_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_1$D_IN;
	if (selectedIO_reg_4_2$EN)
	  selectedIO_reg_4_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_2$D_IN;
	if (selectedIO_reg_4_3$EN)
	  selectedIO_reg_4_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_3$D_IN;
	if (selectedIO_reg_4_4$EN)
	  selectedIO_reg_4_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_4$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    activeVC_perIn_reg = 2'h2;
    activeVC_perIn_reg_1 = 2'h2;
    activeVC_perIn_reg_2 = 2'h2;
    activeVC_perIn_reg_3 = 2'h2;
    activeVC_perIn_reg_4 = 2'h2;
    credits_0 = 4'hA;
    credits_0_1 = 4'hA;
    credits_1 = 4'hA;
    credits_1_1 = 4'hA;
    credits_2 = 4'hA;
    credits_2_1 = 4'hA;
    credits_3 = 4'hA;
    credits_3_1 = 4'hA;
    credits_4 = 4'hA;
    credits_4_1 = 4'hA;
    inPortVL_0 = 3'h2;
    inPortVL_0_1 = 3'h2;
    inPortVL_1 = 3'h2;
    inPortVL_1_1 = 3'h2;
    inPortVL_2 = 3'h2;
    inPortVL_2_1 = 3'h2;
    inPortVL_3 = 3'h2;
    inPortVL_3_1 = 3'h2;
    inPortVL_4 = 3'h2;
    inPortVL_4_1 = 3'h2;
    lockedVL_0 = 1'h0;
    lockedVL_0_1 = 1'h0;
    lockedVL_1 = 1'h0;
    lockedVL_1_1 = 1'h0;
    lockedVL_2 = 1'h0;
    lockedVL_2_1 = 1'h0;
    lockedVL_3 = 1'h0;
    lockedVL_3_1 = 1'h0;
    lockedVL_4 = 1'h0;
    lockedVL_4_1 = 1'h0;
    selectedIO_reg_0 = 1'h0;
    selectedIO_reg_0_1 = 1'h0;
    selectedIO_reg_0_2 = 1'h0;
    selectedIO_reg_0_3 = 1'h0;
    selectedIO_reg_0_4 = 1'h0;
    selectedIO_reg_1 = 1'h0;
    selectedIO_reg_1_1 = 1'h0;
    selectedIO_reg_1_2 = 1'h0;
    selectedIO_reg_1_3 = 1'h0;
    selectedIO_reg_1_4 = 1'h0;
    selectedIO_reg_2 = 1'h0;
    selectedIO_reg_2_1 = 1'h0;
    selectedIO_reg_2_2 = 1'h0;
    selectedIO_reg_2_3 = 1'h0;
    selectedIO_reg_2_4 = 1'h0;
    selectedIO_reg_3 = 1'h0;
    selectedIO_reg_3_1 = 1'h0;
    selectedIO_reg_3_2 = 1'h0;
    selectedIO_reg_3_3 = 1'h0;
    selectedIO_reg_3_4 = 1'h0;
    selectedIO_reg_4 = 1'h0;
    selectedIO_reg_4_1 = 1'h0;
    selectedIO_reg_4_2 = 1'h0;
    selectedIO_reg_4_3 = 1'h0;
    selectedIO_reg_4_4 = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N) if (EN_out_ports_0_putCredits) $write("");
    if (RST_N)
      if (EN_out_ports_0_putCredits && out_ports_0_putCredits_cr_in[1])
	$write("");
    if (RST_N) if (EN_out_ports_1_putCredits) $write("");
    if (RST_N)
      if (EN_out_ports_1_putCredits && out_ports_1_putCredits_cr_in[1])
	$write("");
    if (RST_N) if (EN_out_ports_2_putCredits) $write("");
    if (RST_N)
      if (EN_out_ports_2_putCredits && out_ports_2_putCredits_cr_in[1])
	$write("");
    if (RST_N) if (EN_out_ports_3_putCredits) $write("");
    if (RST_N)
      if (EN_out_ports_3_putCredits && out_ports_3_putCredits_cr_in[1])
	$write("");
    if (RST_N) if (EN_out_ports_4_putCredits) $write("");
    if (RST_N)
      if (EN_out_ports_4_putCredits && out_ports_4_putCredits_cr_in[1])
	$write("");
    if (RST_N)
      if (outport_encoder___d1476[3] &&
	  flitBuffers$deq[64] != fifo_out__h38368)
	$write("");
    if (RST_N)
      if (outport_encoder___d1475[3] &&
	  flitBuffers_1$deq[64] != fifo_out__h39552)
	$write("");
    if (RST_N)
      if (outport_encoder___d1474[3] &&
	  flitBuffers_2$deq[64] != fifo_out__h40097)
	$write("");
    if (RST_N)
      if (outport_encoder___d1473[3] &&
	  flitBuffers_3$deq[64] != fifo_out__h40642)
	$write("");
    if (RST_N)
      if (outport_encoder___d1472[3] &&
	  flitBuffers_4$deq[64] != fifo_out__h41187)
	$write("");
    if (RST_N)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	  (outport_encoder___d1472[3] ?
	     outport_encoder___d1472[2:0] != 3'd0 &&
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1465 :
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1465))
	$write("");
    if (RST_N)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1559)
	$display("Dynamic assertion failed: \"Router.bsv\", line 769, column 47\nOutput selected invalid flit!");
    if (RST_N)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1559)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1559)
	$display("Dynamic assertion failed: \"Router.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1408 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_NOT_out_ETC___d1559)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	  (outport_encoder___d1472[3] ?
	     outport_encoder___d1472[2:0] != 3'd1 &&
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1466 :
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1466))
	$write("");
    if (RST_N)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562)
	$display("Dynamic assertion failed: \"Router.bsv\", line 769, column 47\nOutput selected invalid flit!");
    if (RST_N)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562)
	$display("Dynamic assertion failed: \"Router.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1418 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1562)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	  (outport_encoder___d1472[3] ?
	     outport_encoder___d1472[2:0] != 3'd2 &&
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1467 :
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1467))
	$write("");
    if (RST_N)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565)
	$display("Dynamic assertion failed: \"Router.bsv\", line 769, column 47\nOutput selected invalid flit!");
    if (RST_N)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565)
	$display("Dynamic assertion failed: \"Router.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1420 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1565)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	  (outport_encoder___d1472[3] ?
	     outport_encoder___d1472[2:0] != 3'd3 &&
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1468 :
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1468))
	$write("");
    if (RST_N)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568)
	$display("Dynamic assertion failed: \"Router.bsv\", line 769, column 47\nOutput selected invalid flit!");
    if (RST_N)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568)
	$display("Dynamic assertion failed: \"Router.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1422 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1568)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	  (outport_encoder___d1472[3] ?
	     outport_encoder___d1472[2:0] != 3'd4 &&
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1469 :
	     IF_outport_encoder_69_BIT_3_70_THEN_NOT_outpor_ETC___d1469))
	$write("");
    if (RST_N)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571)
	$display("Dynamic assertion failed: \"Router.bsv\", line 769, column 47\nOutput selected invalid flit!");
    if (RST_N)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571)
	$finish(32'd0);
    if (RST_N)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571)
	$display("Dynamic assertion failed: \"Router.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_00_BIT_3_01_THEN_outport_en_ETC___d1424 &&
	  IF_IF_outport_encoder_00_BIT_3_01_THEN_IF_outp_ETC___d1571)
	$finish(32'd0);
    if (RST_N)
      if (credits_set_0$whas && !credits_clear_0$whas &&
	  credits_0_read_PLUS_1___d1234 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_0$whas && credits_clear_0$whas && credits_0 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_0_1$whas && !credits_clear_0_1$whas &&
	  credits_0_1_read__3_PLUS_1___d1235 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_0_1$whas && credits_clear_0_1$whas &&
	  credits_0_1 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_1$whas && !credits_clear_1$whas &&
	  credits_1_read_PLUS_1___d1236 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_1$whas && credits_clear_1$whas && credits_1 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_1_1$whas && !credits_clear_1_1$whas &&
	  credits_1_1_read__5_PLUS_1___d1237 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_1_1$whas && credits_clear_1_1$whas &&
	  credits_1_1 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_2$whas && !credits_clear_2$whas &&
	  credits_2_read_PLUS_1___d1238 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_2$whas && credits_clear_2$whas && credits_2 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_2_1$whas && !credits_clear_2_1$whas &&
	  credits_2_1_read__7_PLUS_1___d1239 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_2_1$whas && credits_clear_2_1$whas &&
	  credits_2_1 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_3$whas && !credits_clear_3$whas &&
	  credits_3_read__1_PLUS_1___d1240 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_3$whas && credits_clear_3$whas && credits_3 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_3_1$whas && !credits_clear_3_1$whas &&
	  credits_3_1_read__9_PLUS_1___d1241 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_3_1$whas && credits_clear_3_1$whas &&
	  credits_3_1 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_4$whas && !credits_clear_4$whas &&
	  credits_4_read__3_PLUS_1___d1242 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_4$whas && credits_clear_4$whas && credits_4 == 4'd0)
	$write("");
    if (RST_N)
      if (credits_set_4_1$whas && !credits_clear_4_1$whas &&
	  credits_4_1_read__1_PLUS_1___d1243 > 4'd8)
	$write("");
    if (RST_N)
      if (!credits_set_4_1$whas && credits_clear_4_1$whas &&
	  credits_4_1 == 4'd0)
	$write("");
  end
  // synopsys translate_on
endmodule  // mkRouterCore

